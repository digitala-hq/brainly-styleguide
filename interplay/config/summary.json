{
   "brainly-style-guide": {
      "ActionList": {
         "id": "BrainlyStyleGuide_ActionList",
         "name": "ActionList",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ActionList"
         },
         "resolved": {
            "relativePath": "src/components/action-list/ActionList.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ActionList"
               },
               {
                  "relativePath": "src/components/action-list/ActionList.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "toTop": {
                  "name": "toTop",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "noWrap": {
                  "name": "noWrap",
                  "type": "boolean",
                  "source": "parsing"
               },
               "direction": {
                  "name": "direction",
                  "type": "string",
                  "enum": [
                     "to-right",
                     "centered",
                     "space-between",
                     "space-around",
                     "space-evenly"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "to-right",
                           "centered",
                           "space-between",
                           "space-around",
                           "space-evenly"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "align-baseline",
                     "stretch"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "align-baseline",
                           "stretch"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "toTop": {
               "name": "toTop",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "noWrap": {
               "name": "noWrap",
               "type": "boolean",
               "source": "parsing"
            },
            "direction": {
               "name": "direction",
               "type": "string",
               "enum": [
                  "to-right",
                  "centered",
                  "space-between",
                  "space-around",
                  "space-evenly"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "to-right",
                        "centered",
                        "space-between",
                        "space-around",
                        "space-evenly"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "align-baseline",
                  "stretch"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "align-baseline",
                        "stretch"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ActionList"
               }
            ]
         ],
         "ignored": false
      },
      "ActionListHole": {
         "id": "BrainlyStyleGuide_ActionListHole",
         "name": "ActionListHole",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ActionListHole"
         },
         "resolved": {
            "relativePath": "src/components/action-list/ActionListHole.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ActionListHole"
               },
               {
                  "relativePath": "src/components/action-list/ActionListHole.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "asContainer": {
                  "name": "asContainer",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spacing": {
                  "name": "spacing",
                  "type": "string",
                  "enum": [
                     "xsmall",
                     "small"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xsmall",
                           "small"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "noSpacing": {
                  "name": "noSpacing",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spaceBellow": {
                  "name": "spaceBellow",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spacedLarge": {
                  "name": "spacedLarge",
                  "type": "boolean",
                  "source": "parsing"
               },
               "noShrink": {
                  "name": "noShrink",
                  "type": "boolean",
                  "source": "parsing"
               },
               "grow": {
                  "name": "grow",
                  "type": "boolean",
                  "source": "parsing"
               },
               "toEnd": {
                  "name": "toEnd",
                  "type": "boolean",
                  "source": "parsing"
               },
               "toRight": {
                  "name": "toRight",
                  "type": "boolean",
                  "source": "parsing"
               },
               "stretch": {
                  "name": "stretch",
                  "type": "boolean",
                  "source": "parsing"
               },
               "equalWidth": {
                  "name": "equalWidth",
                  "type": "boolean",
                  "source": "parsing"
               },
               "hideOverflow": {
                  "name": "hideOverflow",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "asContainer": {
               "name": "asContainer",
               "type": "boolean",
               "source": "parsing"
            },
            "spacing": {
               "name": "spacing",
               "type": "string",
               "enum": [
                  "xsmall",
                  "small"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xsmall",
                        "small"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "noSpacing": {
               "name": "noSpacing",
               "type": "boolean",
               "source": "parsing"
            },
            "spaceBellow": {
               "name": "spaceBellow",
               "type": "boolean",
               "source": "parsing"
            },
            "spacedLarge": {
               "name": "spacedLarge",
               "type": "boolean",
               "source": "parsing"
            },
            "noShrink": {
               "name": "noShrink",
               "type": "boolean",
               "source": "parsing"
            },
            "grow": {
               "name": "grow",
               "type": "boolean",
               "source": "parsing"
            },
            "toEnd": {
               "name": "toEnd",
               "type": "boolean",
               "source": "parsing"
            },
            "toRight": {
               "name": "toRight",
               "type": "boolean",
               "source": "parsing"
            },
            "stretch": {
               "name": "stretch",
               "type": "boolean",
               "source": "parsing"
            },
            "equalWidth": {
               "name": "equalWidth",
               "type": "boolean",
               "source": "parsing"
            },
            "hideOverflow": {
               "name": "hideOverflow",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ActionListHole"
               }
            ]
         ],
         "ignored": false
      },
      "Avatar": {
         "id": "BrainlyStyleGuide_Avatar",
         "name": "Avatar",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Avatar"
         },
         "resolved": {
            "relativePath": "src/components/avatar/Avatar.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Avatar"
               },
               {
                  "relativePath": "src/components/avatar/Avatar.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "s",
                  "source": "parsing"
               },
               "border": {
                  "name": "border",
                  "type": "boolean",
                  "default": false,
                  "source": "parsing"
               },
               "spaced": {
                  "name": "spaced",
                  "type": "boolean",
                  "source": "parsing"
               },
               "imgSrc": {
                  "name": "imgSrc",
                  "type": "string",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "title": {
                  "name": "title",
                  "type": "string",
                  "source": "parsing"
               },
               "link": {
                  "name": "link",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "s",
               "source": "parsing",
               "used": true
            },
            "border": {
               "name": "border",
               "type": "boolean",
               "default": false,
               "source": "parsing",
               "used": true
            },
            "spaced": {
               "name": "spaced",
               "type": "boolean",
               "source": "parsing"
            },
            "imgSrc": {
               "name": "imgSrc",
               "type": "string",
               "source": "parsing",
               "used": true
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "title": {
               "name": "title",
               "type": "string",
               "source": "parsing"
            },
            "link": {
               "name": "link",
               "type": "string",
               "source": "parsing"
            },
            "key": {
               "name": "key",
               "type": "string",
               "used": true
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Avatar"
               }
            ]
         ],
         "used": true,
         "overrides": {
            "props": {
               "key": {
                  "source": "example",
                  "relativePath": "src/components/avatar/Avatar.stories.jsx",
                  "prev": null,
                  "new": {
                     "name": "key",
                     "type": "string",
                     "used": true
                  }
               }
            }
         },
         "ignored": false
      },
      "Box": {
         "id": "BrainlyStyleGuide_Box",
         "name": "Box",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Box"
         },
         "resolved": {
            "relativePath": "src/components/box/Box.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Box"
               },
               {
                  "relativePath": "src/components/box/Box.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be rendered inside of the Box",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "dark",
                     "light",
                     "blue",
                     "lavender",
                     "lavender-secondary-ultra-light",
                     "mint",
                     "mint-secondary",
                     "mint-secondary-light",
                     "mint-secondary-ultra-light",
                     "blue-secondary",
                     "blue-secondary-light",
                     "gray-secondary-lightest",
                     "gray-secondary-ultra-light",
                     "mustard-primary",
                     "mustard-secondary-light",
                     "peach",
                     "peach-secondary",
                     "peach-secondary-light"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "dark",
                           "light",
                           "blue",
                           "lavender",
                           "lavender-secondary-ultra-light",
                           "mint",
                           "mint-secondary",
                           "mint-secondary-light",
                           "mint-secondary-ultra-light",
                           "blue-secondary",
                           "blue-secondary-light",
                           "gray-secondary-lightest",
                           "gray-secondary-ultra-light",
                           "mustard-primary",
                           "mustard-secondary-light",
                           "peach",
                           "peach-secondary",
                           "peach-secondary-light"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Box background color",
                  "source": "parsing"
               },
               "shadow": {
                  "name": "shadow",
                  "type": "boolean",
                  "default": false,
                  "description": "Box shadow",
                  "source": "parsing"
               },
               "padding": {
                  "name": "padding",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl"
                        ],
                        "multipleTypes": [
                           {
                              "type": "string",
                              "enum": [
                                 "xxs",
                                 "xs",
                                 "s",
                                 "m",
                                 "l",
                                 "xl"
                              ]
                           },
                           {
                              "type": "unknown"
                           }
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "m",
                  "description": "Padding size. Defaults to m size, pass null to set it to 0",
                  "source": "parsing"
               },
               "noBorderRadius": {
                  "name": "noBorderRadius",
                  "type": "boolean",
                  "default": false,
                  "description": "Disable border radius",
                  "source": "parsing"
               },
               "border": {
                  "name": "border",
                  "type": "boolean",
                  "default": false,
                  "description": "Show border",
                  "source": "parsing"
               },
               "borderColor": {
                  "name": "borderColor",
                  "type": "string",
                  "enum": [
                     "dark",
                     "light",
                     "blue",
                     "lavender",
                     "lavender-secondary-ultra-light",
                     "mint",
                     "mint-secondary",
                     "mint-secondary-light",
                     "mint-secondary-ultra-light",
                     "blue-secondary",
                     "blue-secondary-light",
                     "gray-secondary-lightest",
                     "gray-secondary-ultra-light",
                     "mustard-primary",
                     "mustard-secondary-light",
                     "peach",
                     "peach-secondary",
                     "peach-secondary-light"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "dark",
                           "light",
                           "blue",
                           "lavender",
                           "lavender-secondary-ultra-light",
                           "mint",
                           "mint-secondary",
                           "mint-secondary-light",
                           "mint-secondary-ultra-light",
                           "blue-secondary",
                           "blue-secondary-light",
                           "gray-secondary-lightest",
                           "gray-secondary-ultra-light",
                           "mustard-primary",
                           "mustard-secondary-light",
                           "peach",
                           "peach-secondary",
                           "peach-secondary-light"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "gray-secondary-lightest",
                  "description": "Border color (works only with border prop)",
                  "source": "parsing"
               }
            }
         },
         "description": "Container for grouping elements. It provides padding, background color, border and shadow.",
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be rendered inside of the Box",
               "source": "parsing",
               "used": true
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "dark",
                  "light",
                  "blue",
                  "lavender",
                  "lavender-secondary-ultra-light",
                  "mint",
                  "mint-secondary",
                  "mint-secondary-light",
                  "mint-secondary-ultra-light",
                  "blue-secondary",
                  "blue-secondary-light",
                  "gray-secondary-lightest",
                  "gray-secondary-ultra-light",
                  "mustard-primary",
                  "mustard-secondary-light",
                  "peach",
                  "peach-secondary",
                  "peach-secondary-light"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "dark",
                        "light",
                        "blue",
                        "lavender",
                        "lavender-secondary-ultra-light",
                        "mint",
                        "mint-secondary",
                        "mint-secondary-light",
                        "mint-secondary-ultra-light",
                        "blue-secondary",
                        "blue-secondary-light",
                        "gray-secondary-lightest",
                        "gray-secondary-ultra-light",
                        "mustard-primary",
                        "mustard-secondary-light",
                        "peach",
                        "peach-secondary",
                        "peach-secondary-light"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Box background color",
               "source": "parsing",
               "used": true
            },
            "shadow": {
               "name": "shadow",
               "type": "boolean",
               "default": false,
               "description": "Box shadow",
               "source": "parsing"
            },
            "padding": {
               "name": "padding",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl"
                     ],
                     "multipleTypes": [
                        {
                           "type": "string",
                           "enum": [
                              "xxs",
                              "xs",
                              "s",
                              "m",
                              "l",
                              "xl"
                           ]
                        },
                        {
                           "type": "unknown"
                        }
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "m",
               "description": "Padding size. Defaults to m size, pass null to set it to 0",
               "source": "parsing"
            },
            "noBorderRadius": {
               "name": "noBorderRadius",
               "type": "boolean",
               "default": false,
               "description": "Disable border radius",
               "source": "parsing"
            },
            "border": {
               "name": "border",
               "type": "boolean",
               "default": false,
               "description": "Show border",
               "source": "parsing"
            },
            "borderColor": {
               "name": "borderColor",
               "type": "string",
               "enum": [
                  "dark",
                  "light",
                  "blue",
                  "lavender",
                  "lavender-secondary-ultra-light",
                  "mint",
                  "mint-secondary",
                  "mint-secondary-light",
                  "mint-secondary-ultra-light",
                  "blue-secondary",
                  "blue-secondary-light",
                  "gray-secondary-lightest",
                  "gray-secondary-ultra-light",
                  "mustard-primary",
                  "mustard-secondary-light",
                  "peach",
                  "peach-secondary",
                  "peach-secondary-light"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "dark",
                        "light",
                        "blue",
                        "lavender",
                        "lavender-secondary-ultra-light",
                        "mint",
                        "mint-secondary",
                        "mint-secondary-light",
                        "mint-secondary-ultra-light",
                        "blue-secondary",
                        "blue-secondary-light",
                        "gray-secondary-lightest",
                        "gray-secondary-ultra-light",
                        "mustard-primary",
                        "mustard-secondary-light",
                        "peach",
                        "peach-secondary",
                        "peach-secondary-light"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "gray-secondary-lightest",
               "description": "Border color (works only with border prop)",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Box"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Breadcrumb": {
         "id": "BrainlyStyleGuide_Breadcrumb",
         "name": "Breadcrumb",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Breadcrumb"
         },
         "resolved": {
            "relativePath": "src/components/breadcrumbs/Breadcrumb.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Breadcrumb"
               },
               {
                  "relativePath": "src/components/breadcrumbs/Breadcrumb.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "adaptive": {
                  "name": "adaptive",
                  "type": "boolean",
                  "source": "parsing"
               },
               "short": {
                  "name": "short",
                  "type": "boolean",
                  "source": "parsing"
               },
               "inlineItems": {
                  "name": "inlineItems",
                  "type": "boolean",
                  "source": "parsing"
               },
               "elements": {
                  "name": "elements",
                  "type": "array",
                  "default": [],
                  "items": {
                     "type": "unknown"
                  },
                  "source": "parsing"
               }
            }
         },
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "adaptive": {
               "name": "adaptive",
               "type": "boolean",
               "source": "parsing"
            },
            "short": {
               "name": "short",
               "type": "boolean",
               "source": "parsing"
            },
            "inlineItems": {
               "name": "inlineItems",
               "type": "boolean",
               "source": "parsing",
               "used": true
            },
            "elements": {
               "name": "elements",
               "default": [],
               "source": "parsing",
               "type": "array",
               "items": {
                  "type": "string"
               },
               "used": true
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Breadcrumb"
               }
            ]
         ],
         "used": true,
         "overrides": {
            "props": {
               "elements": {
                  "source": "example",
                  "relativePath": "src/components/breadcrumbs/Breadcrumbs.stories.jsx",
                  "prev": {
                     "type": "array",
                     "items": {
                        "type": "unknown"
                     }
                  },
                  "new": {
                     "type": "array",
                     "items": {
                        "type": "string"
                     }
                  }
               }
            }
         },
         "ignored": false
      },
      "Bubble": {
         "id": "BrainlyStyleGuide_Bubble",
         "name": "Bubble",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Bubble"
         },
         "resolved": {
            "relativePath": "src/components/bubble/Bubble.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Bubble"
               },
               {
                  "relativePath": "src/components/bubble/Bubble.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "alignment": {
                  "name": "alignment",
                  "type": "string",
                  "enum": [
                     "start",
                     "center",
                     "end"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "start",
                           "center",
                           "end"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "center",
                  "source": "parsing"
               },
               "direction": {
                  "name": "direction",
                  "type": "string",
                  "enum": [
                     "left",
                     "right",
                     "top",
                     "bottom"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "left",
                           "right",
                           "top",
                           "bottom"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "blue",
                     "lavender",
                     "dark",
                     "mint",
                     "mint-secondary",
                     "mint-secondary-light",
                     "navyblue-secondary",
                     "blue-secondary",
                     "blue-secondary-light",
                     "gray-secondary-lightest",
                     "peach"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "blue",
                           "lavender",
                           "dark",
                           "mint",
                           "mint-secondary",
                           "mint-secondary-light",
                           "navyblue-secondary",
                           "blue-secondary",
                           "blue-secondary-light",
                           "gray-secondary-lightest",
                           "peach"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "full": {
                  "name": "full",
                  "type": "boolean",
                  "source": "parsing"
               },
               "noShadow": {
                  "name": "noShadow",
                  "type": "boolean",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children",
            "direction"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "alignment": {
               "name": "alignment",
               "type": "string",
               "enum": [
                  "start",
                  "center",
                  "end"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "start",
                        "center",
                        "end"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "center",
               "source": "parsing"
            },
            "direction": {
               "name": "direction",
               "type": "string",
               "enum": [
                  "left",
                  "right",
                  "top",
                  "bottom"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "left",
                        "right",
                        "top",
                        "bottom"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "blue",
                  "lavender",
                  "dark",
                  "mint",
                  "mint-secondary",
                  "mint-secondary-light",
                  "navyblue-secondary",
                  "blue-secondary",
                  "blue-secondary-light",
                  "gray-secondary-lightest",
                  "peach"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "blue",
                        "lavender",
                        "dark",
                        "mint",
                        "mint-secondary",
                        "mint-secondary-light",
                        "navyblue-secondary",
                        "blue-secondary",
                        "blue-secondary-light",
                        "gray-secondary-lightest",
                        "peach"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "full": {
               "name": "full",
               "type": "boolean",
               "source": "parsing"
            },
            "noShadow": {
               "name": "noShadow",
               "type": "boolean",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Bubble"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Button": {
         "id": "BrainlyStyleGuide_Button",
         "name": "Button",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Button"
         },
         "resolved": {
            "relativePath": "src/components/buttons/Button.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Button"
               },
               {
                  "relativePath": "src/components/buttons/Button.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "solid-light",
                     "outline",
                     "transparent",
                     "transparent-light",
                     "solid",
                     "solid-inverted",
                     "solid-blue",
                     "solid-mint",
                     "transparent-peach",
                     "transparent-mustard",
                     "transparent-blue",
                     "transparent-inverted",
                     "facebook"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "solid-light",
                           "outline",
                           "transparent",
                           "transparent-light",
                           "solid",
                           "solid-inverted",
                           "solid-blue",
                           "solid-mint",
                           "transparent-peach",
                           "transparent-mustard",
                           "transparent-blue",
                           "transparent-inverted",
                           "facebook"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "solid",
                  "description": "Specify type of the button that you want to use",
                  "source": "parsing"
               },
               "toggle": {
                  "name": "toggle",
                  "type": "string",
                  "enum": [
                     "peach",
                     "mustard",
                     "blue"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "peach",
                           "mustard",
                           "blue"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Set toggle state of the button. Caution: Toggle property work with for specific button types: solid-light,outline, transparent, transparent-light, transparent-peach, transparent-mustard, transparent-blue",
                  "source": "parsing"
               },
               "icon": {
                  "name": "icon",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "You can render icon inside each type of button on the left side",
                  "source": "parsing"
               },
               "iconOnly": {
                  "name": "iconOnly",
                  "type": "boolean",
                  "description": "Optional and available when icon is set. it hides buttons text",
                  "source": "parsing"
               },
               "reversedOrder": {
                  "name": "reversedOrder",
                  "type": "boolean",
                  "description": "Reverses order of icon and text. Effective only when icon is set.",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be rendered inside Button",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "l",
                     "m",
                     "s"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "l",
                           "m",
                           "s"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "m",
                  "description": "There are three sizes options for buttons, not need to be specify, default is m",
                  "source": "parsing"
               },
               "href": {
                  "name": "href",
                  "type": "string",
                  "description": "Specify href for button, optional string",
                  "source": "parsing"
               },
               "disabled": {
                  "name": "disabled",
                  "type": "boolean",
                  "description": "Optional boolean for disabled button",
                  "source": "parsing"
               },
               "loading": {
                  "name": "loading",
                  "type": "boolean",
                  "description": "Show loading state. By default loading state make button disabled while showing spinner inside and keep buttons width unchanged.",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "description": "Optional boolean for full width button",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "solid-light",
                  "outline",
                  "transparent",
                  "transparent-light",
                  "solid",
                  "solid-inverted",
                  "solid-blue",
                  "solid-mint",
                  "transparent-peach",
                  "transparent-mustard",
                  "transparent-blue",
                  "transparent-inverted",
                  "facebook"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "solid-light",
                        "outline",
                        "transparent",
                        "transparent-light",
                        "solid",
                        "solid-inverted",
                        "solid-blue",
                        "solid-mint",
                        "transparent-peach",
                        "transparent-mustard",
                        "transparent-blue",
                        "transparent-inverted",
                        "facebook"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "solid",
               "description": "Specify type of the button that you want to use",
               "source": "parsing"
            },
            "toggle": {
               "name": "toggle",
               "type": "string",
               "enum": [
                  "peach",
                  "mustard",
                  "blue"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "peach",
                        "mustard",
                        "blue"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Set toggle state of the button. Caution: Toggle property work with for specific button types: solid-light,outline, transparent, transparent-light, transparent-peach, transparent-mustard, transparent-blue",
               "source": "parsing"
            },
            "icon": {
               "name": "icon",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "You can render icon inside each type of button on the left side",
               "source": "parsing",
               "used": true
            },
            "iconOnly": {
               "name": "iconOnly",
               "type": "boolean",
               "description": "Optional and available when icon is set. it hides buttons text",
               "source": "parsing"
            },
            "reversedOrder": {
               "name": "reversedOrder",
               "type": "boolean",
               "description": "Reverses order of icon and text. Effective only when icon is set.",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be rendered inside Button",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "l",
                  "m",
                  "s"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "l",
                        "m",
                        "s"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "m",
               "description": "There are three sizes options for buttons, not need to be specify, default is m",
               "source": "parsing"
            },
            "href": {
               "name": "href",
               "type": "string",
               "description": "Specify href for button, optional string",
               "source": "parsing"
            },
            "disabled": {
               "name": "disabled",
               "type": "boolean",
               "description": "Optional boolean for disabled button",
               "source": "parsing"
            },
            "loading": {
               "name": "loading",
               "type": "boolean",
               "description": "Show loading state. By default loading state make button disabled while showing spinner inside and keep buttons width unchanged.",
               "source": "parsing"
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "description": "Optional boolean for full width button",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Button"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "ButtonRound": {
         "id": "BrainlyStyleGuide_ButtonRound",
         "name": "ButtonRound",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ButtonRound"
         },
         "resolved": {
            "relativePath": "src/components/buttons/ButtonRound.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ButtonRound"
               },
               {
                  "relativePath": "src/components/buttons/ButtonRound.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "wide": {
                  "name": "wide",
                  "type": "boolean",
                  "source": "parsing"
               },
               "disabled": {
                  "name": "disabled",
                  "type": "boolean",
                  "source": "parsing"
               },
               "small": {
                  "name": "small",
                  "type": "boolean",
                  "source": "parsing"
               },
               "href": {
                  "name": "href",
                  "type": "string",
                  "default": "#",
                  "source": "parsing"
               },
               "label": {
                  "name": "label",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "wide": {
               "name": "wide",
               "type": "boolean",
               "source": "parsing"
            },
            "disabled": {
               "name": "disabled",
               "type": "boolean",
               "source": "parsing"
            },
            "small": {
               "name": "small",
               "type": "boolean",
               "source": "parsing"
            },
            "href": {
               "name": "href",
               "type": "string",
               "default": "#",
               "source": "parsing"
            },
            "label": {
               "name": "label",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ButtonRound"
               }
            ]
         ],
         "ignored": false
      },
      "Card": {
         "id": "BrainlyStyleGuide_Card",
         "name": "Card",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Card"
         },
         "resolved": {
            "relativePath": "src/components/card/Card.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Card"
               },
               {
                  "relativePath": "src/components/card/Card.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "full": {
                  "name": "full",
                  "type": "boolean",
                  "source": "parsing"
               },
               "vertical": {
                  "name": "vertical",
                  "type": "boolean",
                  "source": "parsing"
               },
               "centered": {
                  "name": "centered",
                  "type": "boolean",
                  "source": "parsing"
               },
               "noBorder": {
                  "name": "noBorder",
                  "type": "boolean",
                  "source": "parsing"
               },
               "shadow": {
                  "name": "shadow",
                  "type": "boolean",
                  "source": "parsing"
               },
               "transparent": {
                  "name": "transparent",
                  "type": "boolean",
                  "source": "parsing"
               },
               "padding": {
                  "name": "padding",
                  "type": "string",
                  "enum": [
                     "padding-small",
                     "padding-normal",
                     "padding-large",
                     "padding-xlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "padding-small",
                           "padding-normal",
                           "padding-large",
                           "padding-xlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "full": {
               "name": "full",
               "type": "boolean",
               "source": "parsing"
            },
            "vertical": {
               "name": "vertical",
               "type": "boolean",
               "source": "parsing"
            },
            "centered": {
               "name": "centered",
               "type": "boolean",
               "source": "parsing"
            },
            "noBorder": {
               "name": "noBorder",
               "type": "boolean",
               "source": "parsing"
            },
            "shadow": {
               "name": "shadow",
               "type": "boolean",
               "source": "parsing"
            },
            "transparent": {
               "name": "transparent",
               "type": "boolean",
               "source": "parsing"
            },
            "padding": {
               "name": "padding",
               "type": "string",
               "enum": [
                  "padding-small",
                  "padding-normal",
                  "padding-large",
                  "padding-xlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "padding-small",
                        "padding-normal",
                        "padding-large",
                        "padding-xlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Card"
               }
            ]
         ],
         "ignored": false
      },
      "CardHole": {
         "id": "BrainlyStyleGuide_CardHole",
         "name": "CardHole",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "CardHole"
         },
         "resolved": {
            "relativePath": "src/components/card/CardHole.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "CardHole"
               },
               {
                  "relativePath": "src/components/card/CardHole.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "blue",
                     "blue-secondary",
                     "blue-secondary-light",
                     "lavender",
                     "lavender-secondary",
                     "lavender-secondary-light",
                     "mint",
                     "mint-secondary",
                     "mint-secondary-light",
                     "mustard",
                     "mustard-secondary",
                     "mustard-secondary-light",
                     "gray",
                     "gray-secondary",
                     "gray-secondary-light",
                     "gray-secondary-lightest",
                     "gray-secondary-ultra-light"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "blue",
                           "blue-secondary",
                           "blue-secondary-light",
                           "lavender",
                           "lavender-secondary",
                           "lavender-secondary-light",
                           "mint",
                           "mint-secondary",
                           "mint-secondary-light",
                           "mustard",
                           "mustard-secondary",
                           "mustard-secondary-light",
                           "gray",
                           "gray-secondary",
                           "gray-secondary-light",
                           "gray-secondary-lightest",
                           "gray-secondary-ultra-light"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "blue",
                  "blue-secondary",
                  "blue-secondary-light",
                  "lavender",
                  "lavender-secondary",
                  "lavender-secondary-light",
                  "mint",
                  "mint-secondary",
                  "mint-secondary-light",
                  "mustard",
                  "mustard-secondary",
                  "mustard-secondary-light",
                  "gray",
                  "gray-secondary",
                  "gray-secondary-light",
                  "gray-secondary-lightest",
                  "gray-secondary-ultra-light"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "blue",
                        "blue-secondary",
                        "blue-secondary-light",
                        "lavender",
                        "lavender-secondary",
                        "lavender-secondary-light",
                        "mint",
                        "mint-secondary",
                        "mint-secondary-light",
                        "mustard",
                        "mustard-secondary",
                        "mustard-secondary-light",
                        "gray",
                        "gray-secondary",
                        "gray-secondary-light",
                        "gray-secondary-lightest",
                        "gray-secondary-ultra-light"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "CardHole"
               }
            ]
         ],
         "ignored": false
      },
      "ContentBox": {
         "id": "BrainlyStyleGuide_ContentBox",
         "name": "ContentBox",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ContentBox"
         },
         "resolved": {
            "relativePath": "src/components/content-box/ContentBox.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ContentBox"
               },
               {
                  "relativePath": "src/components/content-box/ContentBox.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "spaced": {
                  "name": "spaced",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spacedSmall": {
                  "name": "spacedSmall",
                  "type": "boolean",
                  "source": "parsing"
               },
               "full": {
                  "name": "full",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "spacedTop": {
                  "name": "spacedTop",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "spacedBottom": {
                  "name": "spacedBottom",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "spaced": {
               "name": "spaced",
               "type": "boolean",
               "source": "parsing"
            },
            "spacedSmall": {
               "name": "spacedSmall",
               "type": "boolean",
               "source": "parsing"
            },
            "full": {
               "name": "full",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "spacedTop": {
               "name": "spacedTop",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "spacedBottom": {
               "name": "spacedBottom",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ContentBox"
               }
            ]
         ],
         "ignored": false
      },
      "Counter": {
         "id": "BrainlyStyleGuide_Counter",
         "name": "Counter",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Counter"
         },
         "resolved": {
            "relativePath": "src/components/counters/Counter.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Counter"
               },
               {
                  "relativePath": "src/components/counters/Counter.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be rendered inside Counter",
                  "source": "parsing"
               },
               "icon": {
                  "name": "icon",
                  "type": "unknown",
                  "description": "Specify type of the counter that you want to use, two types for now",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "xs",
                     "xxs"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xs",
                           "xxs"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "There are two sizes options for counters, not need to be specify, default is xs",
                  "source": "parsing"
               },
               "withAnimation": {
                  "name": "withAnimation",
                  "type": "boolean",
                  "description": "Optional boolean for counter with animation",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be rendered inside Counter",
               "source": "parsing",
               "used": true
            },
            "icon": {
               "name": "icon",
               "description": "Specify type of the counter that you want to use, two types for now",
               "source": "parsing",
               "type": "string",
               "used": true
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "xs",
                  "xxs"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xs",
                        "xxs"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "There are two sizes options for counters, not need to be specify, default is xs",
               "source": "parsing",
               "used": true
            },
            "withAnimation": {
               "name": "withAnimation",
               "type": "boolean",
               "description": "Optional boolean for counter with animation",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Counter"
               }
            ]
         ],
         "used": true,
         "overrides": {
            "props": {
               "icon": {
                  "source": "example",
                  "relativePath": "src/components/counters/Counters.stories.jsx",
                  "prev": {
                     "type": "unknown"
                  },
                  "new": {
                     "type": "string"
                  }
               }
            }
         },
         "ignored": false
      },
      "ContentBoxActions": {
         "id": "BrainlyStyleGuide_ContentBoxActions",
         "name": "ContentBoxActions",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ContentBoxActions"
         },
         "resolved": {
            "relativePath": "src/components/content-box/ContentBoxActions.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ContentBoxActions"
               },
               {
                  "relativePath": "src/components/content-box/ContentBoxActions.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "spacedTop": {
                  "name": "spacedTop",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "spacedBottom": {
                  "name": "spacedBottom",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "left",
                     "center",
                     "right"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "left",
                           "center",
                           "right"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "spacedTop": {
               "name": "spacedTop",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "spacedBottom": {
               "name": "spacedBottom",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "left",
                  "center",
                  "right"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "left",
                        "center",
                        "right"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ContentBoxActions"
               }
            ]
         ],
         "ignored": false
      },
      "ContentBoxContent": {
         "id": "BrainlyStyleGuide_ContentBoxContent",
         "name": "ContentBoxContent",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ContentBoxContent"
         },
         "resolved": {
            "relativePath": "src/components/content-box/ContentBoxContent.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ContentBoxContent"
               },
               {
                  "relativePath": "src/components/content-box/ContentBoxContent.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "full": {
                  "name": "full",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "spacedTop": {
                  "name": "spacedTop",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "spacedBottom": {
                  "name": "spacedBottom",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "left",
                     "center",
                     "right"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "left",
                           "center",
                           "right"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "full": {
               "name": "full",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "spacedTop": {
               "name": "spacedTop",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "spacedBottom": {
               "name": "spacedBottom",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "left",
                  "center",
                  "right"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "left",
                        "center",
                        "right"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ContentBoxContent"
               }
            ]
         ],
         "ignored": false
      },
      "ContentBoxHeader": {
         "id": "BrainlyStyleGuide_ContentBoxHeader",
         "name": "ContentBoxHeader",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ContentBoxHeader"
         },
         "resolved": {
            "relativePath": "src/components/content-box/ContentBoxHeader.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ContentBoxHeader"
               },
               {
                  "relativePath": "src/components/content-box/ContentBoxHeader.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "spaced": {
                  "name": "spaced",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spacedSmall": {
                  "name": "spacedSmall",
                  "type": "boolean",
                  "source": "parsing"
               },
               "full": {
                  "name": "full",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "spacedTop": {
                  "name": "spacedTop",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "spacedBottom": {
                  "name": "spacedBottom",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "left",
                     "center",
                     "right"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "left",
                           "center",
                           "right"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "spaced": {
               "name": "spaced",
               "type": "boolean",
               "source": "parsing"
            },
            "spacedSmall": {
               "name": "spacedSmall",
               "type": "boolean",
               "source": "parsing"
            },
            "full": {
               "name": "full",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "spacedTop": {
               "name": "spacedTop",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "spacedBottom": {
               "name": "spacedBottom",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "left",
                  "center",
                  "right"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "left",
                        "center",
                        "right"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ContentBoxHeader"
               }
            ]
         ],
         "ignored": false
      },
      "ContentBoxTitle": {
         "id": "BrainlyStyleGuide_ContentBoxTitle",
         "name": "ContentBoxTitle",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ContentBoxTitle"
         },
         "resolved": {
            "relativePath": "src/components/content-box/ContentBoxTitle.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ContentBoxTitle"
               },
               {
                  "relativePath": "src/components/content-box/ContentBoxTitle.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "spaced": {
                  "name": "spaced",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spacedSmall": {
                  "name": "spacedSmall",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "spacedTop": {
                  "name": "spacedTop",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "spacedBottom": {
                  "name": "spacedBottom",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "normal",
                     "large",
                     "xlarge",
                     "xxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "normal",
                           "large",
                           "xlarge",
                           "xxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "left",
                     "center",
                     "right"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "left",
                           "center",
                           "right"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "spaced": {
               "name": "spaced",
               "type": "boolean",
               "source": "parsing"
            },
            "spacedSmall": {
               "name": "spacedSmall",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "spacedTop": {
               "name": "spacedTop",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "spacedBottom": {
               "name": "spacedBottom",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "normal",
                  "large",
                  "xlarge",
                  "xxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "normal",
                        "large",
                        "xlarge",
                        "xxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "left",
                  "center",
                  "right"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "left",
                        "center",
                        "right"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ContentBoxTitle"
               }
            ]
         ],
         "ignored": false
      },
      "Dropdown": {
         "id": "BrainlyStyleGuide_Dropdown",
         "name": "Dropdown",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Dropdown"
         },
         "resolved": {
            "relativePath": "src/components/dropdowns/Dropdown.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Dropdown"
               },
               {
                  "relativePath": "src/components/dropdowns/Dropdown.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "name": {
                  "name": "name",
                  "type": "string",
                  "source": "parsing"
               },
               "links": {
                  "name": "links",
                  "type": "array",
                  "items": {
                     "type": "$ReadOnly"
                  },
                  "source": "parsing"
               },
               "initiallyOpened": {
                  "name": "initiallyOpened",
                  "type": "boolean",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "default",
                     "white"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "white"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "default",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "name",
            "links"
         ],
         "props": {
            "name": {
               "name": "name",
               "type": "string",
               "source": "parsing"
            },
            "links": {
               "name": "links",
               "type": "array",
               "items": {
                  "type": "$ReadOnly"
               },
               "source": "parsing"
            },
            "initiallyOpened": {
               "name": "initiallyOpened",
               "type": "boolean",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "default",
                  "white"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "white"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "default",
               "source": "parsing"
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Dropdown"
               }
            ]
         ],
         "ignored": false
      },
      "FlashMessage": {
         "id": "BrainlyStyleGuide_FlashMessage",
         "name": "FlashMessage",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "FlashMessage"
         },
         "resolved": {
            "relativePath": "src/components/flash-messages/FlashMessage.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "FlashMessage"
               },
               {
                  "relativePath": "src/components/flash-messages/FlashMessage.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "text": {
                  "name": "text",
                  "type": "string",
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "default",
                     "success",
                     "error",
                     "info"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "success",
                           "error",
                           "info"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "default",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "text"
         ],
         "props": {
            "text": {
               "name": "text",
               "type": "string",
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "default",
                  "success",
                  "error",
                  "info"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "success",
                        "error",
                        "info"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "default",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "FlashMessage"
               }
            ]
         ],
         "ignored": false
      },
      "Flex": {
         "id": "BrainlyStyleGuide_Flex",
         "name": "Flex",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Flex"
         },
         "resolved": {
            "relativePath": "src/components/flex/Flex.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Flex"
               },
               {
                  "relativePath": "src/components/flex/Flex.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be render inside of the Flex.",
                  "source": "parsing"
               },
               "htmlTag": {
                  "name": "htmlTag",
                  "type": "string",
                  "enum": [
                     "a",
                     "article",
                     "aside",
                     "div",
                     "footer",
                     "form",
                     "h1",
                     "h2",
                     "h3",
                     "h4",
                     "h5",
                     "h6",
                     "header",
                     "input",
                     "li",
                     "main",
                     "nav",
                     "ol",
                     "p",
                     "pre",
                     "section",
                     "span",
                     "textarea",
                     "ul"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "a",
                           "article",
                           "aside",
                           "div",
                           "footer",
                           "form",
                           "h1",
                           "h2",
                           "h3",
                           "h4",
                           "h5",
                           "h6",
                           "header",
                           "input",
                           "li",
                           "main",
                           "nav",
                           "ol",
                           "p",
                           "pre",
                           "section",
                           "span",
                           "textarea",
                           "ul"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Html tag used as container",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "description": "component will be rendered on 100% width of a parent",
                  "source": "parsing"
               },
               "fullHeight": {
                  "name": "fullHeight",
                  "type": "boolean",
                  "description": "component will be rendered on 100% height of a parent",
                  "source": "parsing"
               },
               "noShrink": {
                  "name": "noShrink",
                  "type": "boolean",
                  "description": "It will set flex-shirnk to 0",
                  "source": "parsing"
               },
               "direction": {
                  "name": "direction",
                  "type": "string",
                  "enum": [
                     "column",
                     "column-reverse",
                     "row",
                     "row-reverse"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "column",
                           "column-reverse",
                           "row",
                           "row-reverse"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify flex direction",
                  "source": "parsing"
               },
               "justifyContent": {
                  "name": "justifyContent",
                  "type": "string",
                  "enum": [
                     "center",
                     "flex-start",
                     "flex-end",
                     "baseline",
                     "space-between",
                     "space-around",
                     "space-evenly",
                     "stretch"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "center",
                           "flex-start",
                           "flex-end",
                           "baseline",
                           "space-between",
                           "space-around",
                           "space-evenly",
                           "stretch"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify flex justify content",
                  "source": "parsing"
               },
               "alignContent": {
                  "name": "alignContent",
                  "type": "string",
                  "enum": [
                     "center",
                     "flex-start",
                     "flex-end",
                     "baseline",
                     "stretch"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "center",
                           "flex-start",
                           "flex-end",
                           "baseline",
                           "stretch"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify flex align content",
                  "source": "parsing"
               },
               "alignItems": {
                  "name": "alignItems",
                  "type": "string",
                  "enum": [
                     "center",
                     "flex-start",
                     "flex-end",
                     "baseline",
                     "stretch"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "center",
                           "flex-start",
                           "flex-end",
                           "baseline",
                           "stretch"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify flex align items",
                  "source": "parsing"
               },
               "alignSelf": {
                  "name": "alignSelf",
                  "type": "string",
                  "enum": [
                     "center",
                     "flex-start",
                     "flex-end",
                     "baseline",
                     "stretch"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "center",
                           "flex-start",
                           "flex-end",
                           "baseline",
                           "stretch"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify flex align self",
                  "source": "parsing"
               },
               "inlineFlex": {
                  "name": "inlineFlex",
                  "type": "boolean",
                  "description": "It will set flex display to inline-flex",
                  "source": "parsing"
               },
               "wrap": {
                  "name": "wrap",
                  "type": "boolean",
                  "description": "It will wrap component",
                  "source": "parsing"
               },
               "wrapReverse": {
                  "name": "wrapReverse",
                  "type": "boolean",
                  "description": "It will wrap reverse component",
                  "source": "parsing"
               },
               "margin": {
                  "name": "margin",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl",
                     "xxxl",
                     "xxxxl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl",
                           "xxxl",
                           "xxxxl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify margin for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
                  "source": "parsing"
               },
               "marginTop": {
                  "name": "marginTop",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl",
                     "xxxl",
                     "xxxxl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl",
                           "xxxl",
                           "xxxxl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify margin top for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
                  "source": "parsing"
               },
               "marginRight": {
                  "name": "marginRight",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl",
                     "xxxl",
                     "xxxxl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl",
                           "xxxl",
                           "xxxxl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify margin right for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
                  "source": "parsing"
               },
               "marginBottom": {
                  "name": "marginBottom",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl",
                     "xxxl",
                     "xxxxl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl",
                           "xxxl",
                           "xxxxl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify margin bottom for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
                  "source": "parsing"
               },
               "marginLeft": {
                  "name": "marginLeft",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl",
                     "xxxl",
                     "xxxxl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl",
                           "xxxl",
                           "xxxxl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify margin left for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be render inside of the Flex.",
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_Icon",
                     "BrainlyStyleGuide_Link",
                     "BrainlyStyleGuide_Flex",
                     "BrainlyStyleGuide_Counter"
                  ]
               }
            },
            "htmlTag": {
               "name": "htmlTag",
               "type": "string",
               "enum": [
                  "a",
                  "article",
                  "aside",
                  "div",
                  "footer",
                  "form",
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "header",
                  "input",
                  "li",
                  "main",
                  "nav",
                  "ol",
                  "p",
                  "pre",
                  "section",
                  "span",
                  "textarea",
                  "ul"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "a",
                        "article",
                        "aside",
                        "div",
                        "footer",
                        "form",
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "header",
                        "input",
                        "li",
                        "main",
                        "nav",
                        "ol",
                        "p",
                        "pre",
                        "section",
                        "span",
                        "textarea",
                        "ul"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Html tag used as container",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing",
               "used": true
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "description": "component will be rendered on 100% width of a parent",
               "source": "parsing"
            },
            "fullHeight": {
               "name": "fullHeight",
               "type": "boolean",
               "description": "component will be rendered on 100% height of a parent",
               "source": "parsing"
            },
            "noShrink": {
               "name": "noShrink",
               "type": "boolean",
               "description": "It will set flex-shirnk to 0",
               "source": "parsing"
            },
            "direction": {
               "name": "direction",
               "type": "string",
               "enum": [
                  "column",
                  "column-reverse",
                  "row",
                  "row-reverse"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "column",
                        "column-reverse",
                        "row",
                        "row-reverse"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify flex direction",
               "source": "parsing"
            },
            "justifyContent": {
               "name": "justifyContent",
               "type": "string",
               "enum": [
                  "center",
                  "flex-start",
                  "flex-end",
                  "baseline",
                  "space-between",
                  "space-around",
                  "space-evenly",
                  "stretch"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "center",
                        "flex-start",
                        "flex-end",
                        "baseline",
                        "space-between",
                        "space-around",
                        "space-evenly",
                        "stretch"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify flex justify content",
               "source": "parsing"
            },
            "alignContent": {
               "name": "alignContent",
               "type": "string",
               "enum": [
                  "center",
                  "flex-start",
                  "flex-end",
                  "baseline",
                  "stretch"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "center",
                        "flex-start",
                        "flex-end",
                        "baseline",
                        "stretch"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify flex align content",
               "source": "parsing"
            },
            "alignItems": {
               "name": "alignItems",
               "type": "string",
               "enum": [
                  "center",
                  "flex-start",
                  "flex-end",
                  "baseline",
                  "stretch"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "center",
                        "flex-start",
                        "flex-end",
                        "baseline",
                        "stretch"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify flex align items",
               "source": "parsing",
               "used": true
            },
            "alignSelf": {
               "name": "alignSelf",
               "type": "string",
               "enum": [
                  "center",
                  "flex-start",
                  "flex-end",
                  "baseline",
                  "stretch"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "center",
                        "flex-start",
                        "flex-end",
                        "baseline",
                        "stretch"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify flex align self",
               "source": "parsing"
            },
            "inlineFlex": {
               "name": "inlineFlex",
               "type": "boolean",
               "description": "It will set flex display to inline-flex",
               "source": "parsing",
               "used": true
            },
            "wrap": {
               "name": "wrap",
               "type": "boolean",
               "description": "It will wrap component",
               "source": "parsing"
            },
            "wrapReverse": {
               "name": "wrapReverse",
               "type": "boolean",
               "description": "It will wrap reverse component",
               "source": "parsing"
            },
            "margin": {
               "name": "margin",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl",
                  "xxxl",
                  "xxxxl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl",
                        "xxxl",
                        "xxxxl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify margin for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
               "source": "parsing"
            },
            "marginTop": {
               "name": "marginTop",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl",
                  "xxxl",
                  "xxxxl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl",
                        "xxxl",
                        "xxxxl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify margin top for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
               "source": "parsing",
               "used": true
            },
            "marginRight": {
               "name": "marginRight",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl",
                  "xxxl",
                  "xxxxl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl",
                        "xxxl",
                        "xxxxl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify margin right for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
               "source": "parsing"
            },
            "marginBottom": {
               "name": "marginBottom",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl",
                  "xxxl",
                  "xxxxl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl",
                        "xxxl",
                        "xxxxl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify margin bottom for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
               "source": "parsing"
            },
            "marginLeft": {
               "name": "marginLeft",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl",
                  "xxxl",
                  "xxxxl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl",
                        "xxxl",
                        "xxxxl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify margin left for flex based on spacings: xxs: 4px, xs: 8px, s: 16px, m: 24px, l: 40px, xl: 64px, xxl: 104px, xxxl: 168px, xxxxl: 272px",
               "source": "parsing",
               "used": true
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Flex"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Footer": {
         "id": "BrainlyStyleGuide_Footer",
         "name": "Footer",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Footer"
         },
         "resolved": {
            "relativePath": "src/components/footer/Footer.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Footer"
               },
               {
                  "relativePath": "src/components/footer/Footer.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Footer"
               }
            ]
         ],
         "ignored": false
      },
      "FooterLine": {
         "id": "BrainlyStyleGuide_FooterLine",
         "name": "FooterLine",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "FooterLine"
         },
         "resolved": {
            "relativePath": "src/components/footer/FooterLine.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "FooterLine"
               },
               {
                  "relativePath": "src/components/footer/FooterLine.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "FooterLine"
               }
            ]
         ],
         "ignored": false
      },
      "Checkbox": {
         "id": "BrainlyStyleGuide_Checkbox",
         "name": "Checkbox",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Checkbox"
         },
         "resolved": {
            "relativePath": "src/components/form-elements/Checkbox.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Checkbox"
               },
               {
                  "relativePath": "src/components/form-elements/Checkbox.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "checked": {
                  "name": "checked",
                  "type": "boolean",
                  "source": "parsing"
               },
               "id": {
                  "name": "id",
                  "type": "string",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               }
            }
         },
         "props": {
            "checked": {
               "name": "checked",
               "type": "boolean",
               "source": "parsing"
            },
            "id": {
               "name": "id",
               "type": "string",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Checkbox"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Input": {
         "id": "BrainlyStyleGuide_Input",
         "name": "Input",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Input"
         },
         "resolved": {
            "relativePath": "src/components/form-elements/Input.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Input"
               },
               {
                  "relativePath": "src/components/form-elements/Input.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "button",
                     "color",
                     "date",
                     "datetime-local",
                     "email",
                     "file",
                     "hidden",
                     "image",
                     "month",
                     "number",
                     "password",
                     "range",
                     "reset",
                     "search",
                     "submit",
                     "tel",
                     "text",
                     "time",
                     "url",
                     "week"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "button",
                           "color",
                           "date",
                           "datetime-local",
                           "email",
                           "file",
                           "hidden",
                           "image",
                           "month",
                           "number",
                           "password",
                           "range",
                           "reset",
                           "search",
                           "submit",
                           "tel",
                           "text",
                           "time",
                           "url",
                           "week"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Optional specification for input type",
                  "source": "parsing"
               },
               "value": {
                  "name": "value",
                  "type": "string",
                  "multipleTypes": [
                     {
                        "type": "string"
                     },
                     {
                        "type": "number"
                     }
                  ],
                  "description": "Optional specification for input value, which can be string or number",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "m",
                     "l"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "m",
                           "l"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "There are two sizes options for most of the form elements",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "default",
                     "white"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "white"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "There are two color variants for form elements, default does not have to be specified",
                  "source": "parsing"
               },
               "valid": {
                  "name": "valid",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its valid",
                  "source": "parsing"
               },
               "invalid": {
                  "name": "invalid",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its invalid",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its full width",
                  "source": "parsing"
               },
               "withIcon": {
                  "name": "withIcon",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its with icon, used in search component",
                  "source": "parsing"
               },
               "errorMessage": {
                  "name": "errorMessage",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Optional Node if there should be an error message displayed",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               },
               "setInputRef": {
                  "name": "setInputRef",
                  "type": "Event",
                  "description": "Additional function to set ref for input",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "button",
                  "color",
                  "date",
                  "datetime-local",
                  "email",
                  "file",
                  "hidden",
                  "image",
                  "month",
                  "number",
                  "password",
                  "range",
                  "reset",
                  "search",
                  "submit",
                  "tel",
                  "text",
                  "time",
                  "url",
                  "week"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "button",
                        "color",
                        "date",
                        "datetime-local",
                        "email",
                        "file",
                        "hidden",
                        "image",
                        "month",
                        "number",
                        "password",
                        "range",
                        "reset",
                        "search",
                        "submit",
                        "tel",
                        "text",
                        "time",
                        "url",
                        "week"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Optional specification for input type",
               "source": "parsing"
            },
            "value": {
               "name": "value",
               "type": "string",
               "multipleTypes": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "number"
                  }
               ],
               "description": "Optional specification for input value, which can be string or number",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "m",
                  "l"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "m",
                        "l"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "There are two sizes options for most of the form elements",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "default",
                  "white"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "white"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "There are two color variants for form elements, default does not have to be specified",
               "source": "parsing"
            },
            "valid": {
               "name": "valid",
               "type": "boolean",
               "description": "Optional boolean to specified if its valid",
               "source": "parsing"
            },
            "invalid": {
               "name": "invalid",
               "type": "boolean",
               "description": "Optional boolean to specified if its invalid",
               "source": "parsing"
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "description": "Optional boolean to specified if its full width",
               "source": "parsing"
            },
            "withIcon": {
               "name": "withIcon",
               "type": "boolean",
               "description": "Optional boolean to specified if its with icon, used in search component",
               "source": "parsing"
            },
            "errorMessage": {
               "name": "errorMessage",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Optional Node if there should be an error message displayed",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            },
            "setInputRef": {
               "name": "setInputRef",
               "type": "Event",
               "description": "Additional function to set ref for input",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Input"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Radio": {
         "id": "BrainlyStyleGuide_Radio",
         "name": "Radio",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Radio"
         },
         "resolved": {
            "relativePath": "src/components/form-elements/Radio.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Radio"
               },
               {
                  "relativePath": "src/components/form-elements/Radio.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "checked": {
                  "name": "checked",
                  "type": "boolean",
                  "source": "parsing"
               },
               "name": {
                  "name": "name",
                  "type": "string",
                  "source": "parsing"
               },
               "id": {
                  "name": "id",
                  "type": "string",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "s"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "s"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               }
            }
         },
         "props": {
            "checked": {
               "name": "checked",
               "type": "boolean",
               "source": "parsing"
            },
            "name": {
               "name": "name",
               "type": "string",
               "source": "parsing"
            },
            "id": {
               "name": "id",
               "type": "string",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "xxs",
                  "s"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "s"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Radio"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Select": {
         "id": "BrainlyStyleGuide_Select",
         "name": "Select",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Select"
         },
         "resolved": {
            "relativePath": "src/components/form-elements/Select.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Select"
               },
               {
                  "relativePath": "src/components/form-elements/Select.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "value": {
                  "name": "value",
                  "type": "string",
                  "description": "Optional specification for select value",
                  "source": "parsing"
               },
               "valid": {
                  "name": "valid",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its valid",
                  "source": "parsing"
               },
               "invalid": {
                  "name": "invalid",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its invalid",
                  "source": "parsing"
               },
               "capitalized": {
                  "name": "capitalized",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its capitalized",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "default",
                     "white"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "white"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "There are two color variants for form elements, default does not have to be specified",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "m",
                     "l"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "m",
                           "l"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "There are two sizes options for most of the form elements",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its full width",
                  "source": "parsing"
               },
               "options": {
                  "name": "options",
                  "type": "array",
                  "items": {
                     "type": "signature"
                  },
                  "description": "Optional array of options of the select",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "value": {
               "name": "value",
               "type": "string",
               "description": "Optional specification for select value",
               "source": "parsing"
            },
            "valid": {
               "name": "valid",
               "type": "boolean",
               "description": "Optional boolean to specified if its valid",
               "source": "parsing"
            },
            "invalid": {
               "name": "invalid",
               "type": "boolean",
               "description": "Optional boolean to specified if its invalid",
               "source": "parsing"
            },
            "capitalized": {
               "name": "capitalized",
               "type": "boolean",
               "description": "Optional boolean to specified if its capitalized",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "default",
                  "white"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "white"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "There are two color variants for form elements, default does not have to be specified",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "m",
                  "l"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "m",
                        "l"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "There are two sizes options for most of the form elements",
               "source": "parsing"
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "description": "Optional boolean to specified if its full width",
               "source": "parsing"
            },
            "options": {
               "name": "options",
               "type": "array",
               "items": {
                  "type": "signature"
               },
               "description": "Optional array of options of the select",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Select"
               }
            ]
         ],
         "ignored": false
      },
      "Textarea": {
         "id": "BrainlyStyleGuide_Textarea",
         "name": "Textarea",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Textarea"
         },
         "resolved": {
            "relativePath": "src/components/form-elements/Textarea.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Textarea"
               },
               {
                  "relativePath": "src/components/form-elements/Textarea.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "multipleTypes": [
                     {
                        "type": "string"
                     },
                     {
                        "type": "Event"
                     }
                  ],
                  "source": "parsing"
               },
               "textareaRef": {
                  "name": "textareaRef",
                  "type": "Event",
                  "description": "Additional function to set ref for textarea",
                  "source": "parsing"
               },
               "value": {
                  "name": "value",
                  "type": "unknown",
                  "description": "Optional specification for input value",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "default",
                     "white"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "white"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "There are two color variants for form elements, default does not have to be specified",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "short",
                     "normal",
                     "tall",
                     "xtall"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "short",
                           "normal",
                           "tall",
                           "xtall"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Specify size of the textarea",
                  "source": "parsing"
               },
               "valid": {
                  "name": "valid",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its valid",
                  "source": "parsing"
               },
               "invalid": {
                  "name": "invalid",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its valid",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "description": "Optional boolean to specified if its full width",
                  "source": "parsing"
               },
               "simple": {
                  "name": "simple",
                  "type": "boolean",
                  "description": "Optional boolean for simple variant (does not have border radius)",
                  "source": "parsing"
               },
               "noPadding": {
                  "name": "noPadding",
                  "type": "boolean",
                  "description": "Optional boolean for variant with no padding",
                  "source": "parsing"
               },
               "autoHeight": {
                  "name": "autoHeight",
                  "type": "boolean",
                  "description": "Optional boolean for variant with height auto",
                  "source": "parsing"
               },
               "errorMessage": {
                  "name": "errorMessage",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "multipleTypes": [
                     {
                        "type": "array",
                        "items": {
                           "type": "Node"
                        }
                     },
                     {
                        "type": "string"
                     }
                  ],
                  "description": "Optional Node if there should be an error message displayed",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "multipleTypes": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "Event"
                  }
               ],
               "source": "parsing"
            },
            "textareaRef": {
               "name": "textareaRef",
               "type": "Event",
               "description": "Additional function to set ref for textarea",
               "source": "parsing"
            },
            "value": {
               "name": "value",
               "type": "unknown",
               "description": "Optional specification for input value",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "default",
                  "white"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "white"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "There are two color variants for form elements, default does not have to be specified",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "short",
                  "normal",
                  "tall",
                  "xtall"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "short",
                        "normal",
                        "tall",
                        "xtall"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Specify size of the textarea",
               "source": "parsing"
            },
            "valid": {
               "name": "valid",
               "type": "boolean",
               "description": "Optional boolean to specified if its valid",
               "source": "parsing"
            },
            "invalid": {
               "name": "invalid",
               "type": "boolean",
               "description": "Optional boolean to specified if its valid",
               "source": "parsing"
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "description": "Optional boolean to specified if its full width",
               "source": "parsing"
            },
            "simple": {
               "name": "simple",
               "type": "boolean",
               "description": "Optional boolean for simple variant (does not have border radius)",
               "source": "parsing"
            },
            "noPadding": {
               "name": "noPadding",
               "type": "boolean",
               "description": "Optional boolean for variant with no padding",
               "source": "parsing"
            },
            "autoHeight": {
               "name": "autoHeight",
               "type": "boolean",
               "description": "Optional boolean for variant with height auto",
               "source": "parsing"
            },
            "errorMessage": {
               "name": "errorMessage",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "multipleTypes": [
                  {
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  },
                  {
                     "type": "string"
                  }
               ],
               "description": "Optional Node if there should be an error message displayed",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Textarea"
               }
            ]
         ],
         "ignored": false
      },
      "Header": {
         "id": "BrainlyStyleGuide_Header",
         "name": "Header",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Header"
         },
         "resolved": {
            "relativePath": "src/components/header/Header.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Header"
               },
               {
                  "relativePath": "src/components/header/Header.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "withDivider": {
                  "name": "withDivider",
                  "type": "boolean",
                  "source": "parsing"
               },
               "fixed": {
                  "name": "fixed",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "withDivider": {
               "name": "withDivider",
               "type": "boolean",
               "source": "parsing"
            },
            "fixed": {
               "name": "fixed",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Header"
               }
            ]
         ],
         "ignored": false
      },
      "HeaderContainer": {
         "id": "BrainlyStyleGuide_HeaderContainer",
         "name": "HeaderContainer",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "HeaderContainer"
         },
         "resolved": {
            "relativePath": "src/components/header/HeaderContainer.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "HeaderContainer"
               },
               {
                  "relativePath": "src/components/header/HeaderContainer.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "HeaderContainer"
               }
            ]
         ],
         "ignored": false
      },
      "HeaderContent": {
         "id": "BrainlyStyleGuide_HeaderContent",
         "name": "HeaderContent",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "HeaderContent"
         },
         "resolved": {
            "relativePath": "src/components/header/HeaderContent.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "HeaderContent"
               },
               {
                  "relativePath": "src/components/header/HeaderContent.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "autoHeight": {
                  "name": "autoHeight",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "autoHeight": {
               "name": "autoHeight",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "HeaderContent"
               }
            ]
         ],
         "ignored": false
      },
      "HeaderLeft": {
         "id": "BrainlyStyleGuide_HeaderLeft",
         "name": "HeaderLeft",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "HeaderLeft"
         },
         "resolved": {
            "relativePath": "src/components/header/HeaderLeft.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "HeaderLeft"
               },
               {
                  "relativePath": "src/components/header/HeaderLeft.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "HeaderLeft"
               }
            ]
         ],
         "ignored": false
      },
      "HeaderMiddle": {
         "id": "BrainlyStyleGuide_HeaderMiddle",
         "name": "HeaderMiddle",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "HeaderMiddle"
         },
         "resolved": {
            "relativePath": "src/components/header/HeaderMiddle.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "HeaderMiddle"
               },
               {
                  "relativePath": "src/components/header/HeaderMiddle.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "HeaderMiddle"
               }
            ]
         ],
         "ignored": false
      },
      "HeaderRight": {
         "id": "BrainlyStyleGuide_HeaderRight",
         "name": "HeaderRight",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "HeaderRight"
         },
         "resolved": {
            "relativePath": "src/components/header/HeaderRight.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "HeaderRight"
               },
               {
                  "relativePath": "src/components/header/HeaderRight.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "HeaderRight"
               }
            ]
         ],
         "ignored": false
      },
      "RwdHelper": {
         "id": "BrainlyStyleGuide_RwdHelper",
         "name": "RwdHelper",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "RwdHelper"
         },
         "resolved": {
            "relativePath": "src/components/helpers/RwdHelper.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "RwdHelper"
               },
               {
                  "relativePath": "src/components/helpers/RwdHelper.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "hide": {
                  "name": "hide",
                  "type": "string",
                  "enum": [
                     "small-only",
                     "medium-only",
                     "medium-down",
                     "medium-up",
                     "large-only"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small-only",
                           "medium-only",
                           "medium-down",
                           "medium-up",
                           "large-only"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "multipleTypes": [
                     {
                        "type": "array",
                        "items": {
                           "type": "Node"
                        }
                     },
                     {
                        "type": "string"
                     }
                  ],
                  "source": "parsing"
               }
            }
         },
         "required": [
            "hide",
            "children"
         ],
         "props": {
            "hide": {
               "name": "hide",
               "type": "string",
               "enum": [
                  "small-only",
                  "medium-only",
                  "medium-down",
                  "medium-up",
                  "large-only"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small-only",
                        "medium-only",
                        "medium-down",
                        "medium-up",
                        "large-only"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "multipleTypes": [
                  {
                     "type": "array",
                     "items": {
                        "type": "Node"
                     }
                  },
                  {
                     "type": "string"
                  }
               ],
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "RwdHelper"
               }
            ]
         ],
         "ignored": false
      },
      "HomeButton": {
         "id": "BrainlyStyleGuide_HomeButton",
         "name": "HomeButton",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "HomeButton"
         },
         "resolved": {
            "relativePath": "src/components/home-button/HomeButton.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "HomeButton"
               },
               {
                  "relativePath": "src/components/home-button/HomeButton.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "unknown",
                  "source": "parsing"
               },
               "href": {
                  "name": "href",
                  "type": "string",
                  "default": "#",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "altTag": {
                  "name": "altTag",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "type": {
               "name": "type",
               "type": "unknown",
               "source": "parsing"
            },
            "href": {
               "name": "href",
               "type": "string",
               "default": "#",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "altTag": {
               "name": "altTag",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "HomeButton"
               }
            ]
         ],
         "ignored": false
      },
      "IconAsButton": {
         "id": "BrainlyStyleGuide_IconAsButton",
         "name": "IconAsButton",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "IconAsButton"
         },
         "resolved": {
            "relativePath": "src/components/icon-as-button/IconAsButton.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "IconAsButton"
               },
               {
                  "relativePath": "src/components/icon-as-button/IconAsButton.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "normal"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "normal"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "normal",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "unknown",
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "unknown",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "border": {
                  "name": "border",
                  "type": "boolean",
                  "source": "parsing"
               },
               "action": {
                  "name": "action",
                  "type": "boolean",
                  "source": "parsing"
               },
               "transparent": {
                  "name": "transparent",
                  "type": "boolean",
                  "source": "parsing"
               },
               "active": {
                  "name": "active",
                  "type": "boolean",
                  "source": "parsing"
               },
               "href": {
                  "name": "href",
                  "type": "string",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "normal"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "normal"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "normal",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "unknown",
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "unknown",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "border": {
               "name": "border",
               "type": "boolean",
               "source": "parsing"
            },
            "action": {
               "name": "action",
               "type": "boolean",
               "source": "parsing"
            },
            "transparent": {
               "name": "transparent",
               "type": "boolean",
               "source": "parsing"
            },
            "active": {
               "name": "active",
               "type": "boolean",
               "source": "parsing"
            },
            "href": {
               "name": "href",
               "type": "string",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "IconAsButton"
               }
            ]
         ],
         "ignored": false
      },
      "Icon": {
         "id": "BrainlyStyleGuide_Icon",
         "name": "Icon",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Icon"
         },
         "resolved": {
            "relativePath": "src/components/icons/Icon.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Icon"
               },
               {
                  "relativePath": "src/components/icons/Icon.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be rendered inside Icon",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "adaptive",
                     "blue",
                     "dark",
                     "gray",
                     "gray-light",
                     "gray-secondary",
                     "lavender",
                     "light",
                     "mint",
                     "mustard",
                     "navy-blue",
                     "peach"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "adaptive",
                           "blue",
                           "dark",
                           "gray",
                           "gray-light",
                           "gray-secondary",
                           "lavender",
                           "light",
                           "mint",
                           "mustard",
                           "navy-blue",
                           "peach"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Icons colors example, see more in SG interactive",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "16",
                     "24",
                     "32",
                     "40",
                     "56",
                     "80",
                     "104"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "16",
                           "24",
                           "32",
                           "40",
                           "56",
                           "80",
                           "104"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": 24,
                  "description": "Icons size example, see more in SG interactive",
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "academic_cap",
                     "all_questions",
                     "answer",
                     "arrow_double_down",
                     "arrow_down",
                     "arrow_left",
                     "arrow_right",
                     "arrow_up",
                     "ask_bubble",
                     "ask_parent_to_pay",
                     "attachment",
                     "bell_checked",
                     "bell_outlined",
                     "bold",
                     "bulleted_list",
                     "calendar",
                     "camera",
                     "chapter",
                     "check",
                     "clipboard",
                     "close",
                     "comment",
                     "comment_outlined",
                     "counter",
                     "credit_card",
                     "crown_outlined",
                     "cup",
                     "equation",
                     "excellent",
                     "exclamation_mark",
                     "facebook",
                     "filters",
                     "friend_add",
                     "friend_remove",
                     "friend_pending",
                     "friend_checked",
                     "friends",
                     "fullscreen",
                     "funnel",
                     "heading",
                     "heart",
                     "heart_outlined",
                     "image",
                     "influence",
                     "instagram",
                     "italic",
                     "less",
                     "linkedin",
                     "lock_with_play",
                     "logout",
                     "medium",
                     "menu",
                     "messages",
                     "mic",
                     "money_transfer",
                     "add_more",
                     "notifications",
                     "numbered_list",
                     "open_in_new_tab",
                     "padlock",
                     "pencil",
                     "play",
                     "plus",
                     "points",
                     "profile",
                     "profile_view",
                     "question",
                     "recent_questions",
                     "reload",
                     "report_flag",
                     "report_flag_outlined",
                     "rotate",
                     "rotate_90",
                     "search",
                     "seen",
                     "send",
                     "settings",
                     "share",
                     "sms",
                     "star",
                     "star_half",
                     "star_half_outlined",
                     "star_outlined",
                     "subtitle",
                     "symbols",
                     "title",
                     "toughest_questions",
                     "trash",
                     "twitter",
                     "underlined",
                     "unseen",
                     "verified",
                     "warning",
                     "youtube",
                     "arrow_top_right",
                     "circle",
                     "crop",
                     "cyrillic",
                     "draw",
                     "drawing_mode",
                     "european",
                     "greek",
                     "highlight",
                     "line",
                     "more",
                     "pause",
                     "rectangle",
                     "sup_sub",
                     "triangle",
                     "pi",
                     "quote",
                     "spark",
                     "dot",
                     "clear"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "academic_cap",
                           "all_questions",
                           "answer",
                           "arrow_double_down",
                           "arrow_down",
                           "arrow_left",
                           "arrow_right",
                           "arrow_up",
                           "ask_bubble",
                           "ask_parent_to_pay",
                           "attachment",
                           "bell_checked",
                           "bell_outlined",
                           "bold",
                           "bulleted_list",
                           "calendar",
                           "camera",
                           "chapter",
                           "check",
                           "clipboard",
                           "close",
                           "comment",
                           "comment_outlined",
                           "counter",
                           "credit_card",
                           "crown_outlined",
                           "cup",
                           "equation",
                           "excellent",
                           "exclamation_mark",
                           "facebook",
                           "filters",
                           "friend_add",
                           "friend_remove",
                           "friend_pending",
                           "friend_checked",
                           "friends",
                           "fullscreen",
                           "funnel",
                           "heading",
                           "heart",
                           "heart_outlined",
                           "image",
                           "influence",
                           "instagram",
                           "italic",
                           "less",
                           "linkedin",
                           "lock_with_play",
                           "logout",
                           "medium",
                           "menu",
                           "messages",
                           "mic",
                           "money_transfer",
                           "add_more",
                           "notifications",
                           "numbered_list",
                           "open_in_new_tab",
                           "padlock",
                           "pencil",
                           "play",
                           "plus",
                           "points",
                           "profile",
                           "profile_view",
                           "question",
                           "recent_questions",
                           "reload",
                           "report_flag",
                           "report_flag_outlined",
                           "rotate",
                           "rotate_90",
                           "search",
                           "seen",
                           "send",
                           "settings",
                           "share",
                           "sms",
                           "star",
                           "star_half",
                           "star_half_outlined",
                           "star_outlined",
                           "subtitle",
                           "symbols",
                           "title",
                           "toughest_questions",
                           "trash",
                           "twitter",
                           "underlined",
                           "unseen",
                           "verified",
                           "warning",
                           "youtube",
                           "arrow_top_right",
                           "circle",
                           "crop",
                           "cyrillic",
                           "draw",
                           "drawing_mode",
                           "european",
                           "greek",
                           "highlight",
                           "line",
                           "more",
                           "pause",
                           "rectangle",
                           "sup_sub",
                           "triangle",
                           "pi",
                           "quote",
                           "spark",
                           "dot",
                           "clear"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Icons types example, see more in SG interactive",
                  "source": "parsing"
               },
               "tagType": {
                  "name": "tagType",
                  "type": "string",
                  "enum": [
                     "div",
                     "span"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "div",
                           "span"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "div",
                  "description": "Option to change tag to span, which allows correct HTML structure",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "type"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be rendered inside Icon",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "adaptive",
                  "blue",
                  "dark",
                  "gray",
                  "gray-light",
                  "gray-secondary",
                  "lavender",
                  "light",
                  "mint",
                  "mustard",
                  "navy-blue",
                  "peach"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "adaptive",
                        "blue",
                        "dark",
                        "gray",
                        "gray-light",
                        "gray-secondary",
                        "lavender",
                        "light",
                        "mint",
                        "mustard",
                        "navy-blue",
                        "peach"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Icons colors example, see more in SG interactive",
               "source": "parsing",
               "used": true
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "16",
                  "24",
                  "32",
                  "40",
                  "56",
                  "80",
                  "104"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "16",
                        "24",
                        "32",
                        "40",
                        "56",
                        "80",
                        "104"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": 24,
               "description": "Icons size example, see more in SG interactive",
               "source": "parsing",
               "used": true
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "academic_cap",
                  "all_questions",
                  "answer",
                  "arrow_double_down",
                  "arrow_down",
                  "arrow_left",
                  "arrow_right",
                  "arrow_up",
                  "ask_bubble",
                  "ask_parent_to_pay",
                  "attachment",
                  "bell_checked",
                  "bell_outlined",
                  "bold",
                  "bulleted_list",
                  "calendar",
                  "camera",
                  "chapter",
                  "check",
                  "clipboard",
                  "close",
                  "comment",
                  "comment_outlined",
                  "counter",
                  "credit_card",
                  "crown_outlined",
                  "cup",
                  "equation",
                  "excellent",
                  "exclamation_mark",
                  "facebook",
                  "filters",
                  "friend_add",
                  "friend_remove",
                  "friend_pending",
                  "friend_checked",
                  "friends",
                  "fullscreen",
                  "funnel",
                  "heading",
                  "heart",
                  "heart_outlined",
                  "image",
                  "influence",
                  "instagram",
                  "italic",
                  "less",
                  "linkedin",
                  "lock_with_play",
                  "logout",
                  "medium",
                  "menu",
                  "messages",
                  "mic",
                  "money_transfer",
                  "add_more",
                  "notifications",
                  "numbered_list",
                  "open_in_new_tab",
                  "padlock",
                  "pencil",
                  "play",
                  "plus",
                  "points",
                  "profile",
                  "profile_view",
                  "question",
                  "recent_questions",
                  "reload",
                  "report_flag",
                  "report_flag_outlined",
                  "rotate",
                  "rotate_90",
                  "search",
                  "seen",
                  "send",
                  "settings",
                  "share",
                  "sms",
                  "star",
                  "star_half",
                  "star_half_outlined",
                  "star_outlined",
                  "subtitle",
                  "symbols",
                  "title",
                  "toughest_questions",
                  "trash",
                  "twitter",
                  "underlined",
                  "unseen",
                  "verified",
                  "warning",
                  "youtube",
                  "arrow_top_right",
                  "circle",
                  "crop",
                  "cyrillic",
                  "draw",
                  "drawing_mode",
                  "european",
                  "greek",
                  "highlight",
                  "line",
                  "more",
                  "pause",
                  "rectangle",
                  "sup_sub",
                  "triangle",
                  "pi",
                  "quote",
                  "spark",
                  "dot",
                  "clear"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "academic_cap",
                        "all_questions",
                        "answer",
                        "arrow_double_down",
                        "arrow_down",
                        "arrow_left",
                        "arrow_right",
                        "arrow_up",
                        "ask_bubble",
                        "ask_parent_to_pay",
                        "attachment",
                        "bell_checked",
                        "bell_outlined",
                        "bold",
                        "bulleted_list",
                        "calendar",
                        "camera",
                        "chapter",
                        "check",
                        "clipboard",
                        "close",
                        "comment",
                        "comment_outlined",
                        "counter",
                        "credit_card",
                        "crown_outlined",
                        "cup",
                        "equation",
                        "excellent",
                        "exclamation_mark",
                        "facebook",
                        "filters",
                        "friend_add",
                        "friend_remove",
                        "friend_pending",
                        "friend_checked",
                        "friends",
                        "fullscreen",
                        "funnel",
                        "heading",
                        "heart",
                        "heart_outlined",
                        "image",
                        "influence",
                        "instagram",
                        "italic",
                        "less",
                        "linkedin",
                        "lock_with_play",
                        "logout",
                        "medium",
                        "menu",
                        "messages",
                        "mic",
                        "money_transfer",
                        "add_more",
                        "notifications",
                        "numbered_list",
                        "open_in_new_tab",
                        "padlock",
                        "pencil",
                        "play",
                        "plus",
                        "points",
                        "profile",
                        "profile_view",
                        "question",
                        "recent_questions",
                        "reload",
                        "report_flag",
                        "report_flag_outlined",
                        "rotate",
                        "rotate_90",
                        "search",
                        "seen",
                        "send",
                        "settings",
                        "share",
                        "sms",
                        "star",
                        "star_half",
                        "star_half_outlined",
                        "star_outlined",
                        "subtitle",
                        "symbols",
                        "title",
                        "toughest_questions",
                        "trash",
                        "twitter",
                        "underlined",
                        "unseen",
                        "verified",
                        "warning",
                        "youtube",
                        "arrow_top_right",
                        "circle",
                        "crop",
                        "cyrillic",
                        "draw",
                        "drawing_mode",
                        "european",
                        "greek",
                        "highlight",
                        "line",
                        "more",
                        "pause",
                        "rectangle",
                        "sup_sub",
                        "triangle",
                        "pi",
                        "quote",
                        "spark",
                        "dot",
                        "clear"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Icons types example, see more in SG interactive",
               "source": "parsing",
               "used": true
            },
            "tagType": {
               "name": "tagType",
               "type": "string",
               "enum": [
                  "div",
                  "span"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "div",
                        "span"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "div",
               "description": "Option to change tag to span, which allows correct HTML structure",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Icon"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "MobileIcon": {
         "id": "BrainlyStyleGuide_MobileIcon",
         "name": "MobileIcon",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "MobileIcon"
         },
         "resolved": {
            "relativePath": "src/components/mobile-icons/MobileIcon.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "MobileIcon"
               },
               {
                  "relativePath": "src/components/mobile-icons/MobileIcon.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "arrow",
                     "answer_bubble",
                     "ask_bubble",
                     "backward_5s",
                     "backward_end",
                     "barcode_scanner",
                     "chapter",
                     "clear",
                     "comment",
                     "crown",
                     "crown_outlined",
                     "cup",
                     "filters",
                     "flashlight_off",
                     "flashlight_on",
                     "forward_5s",
                     "heart_outlined",
                     "info",
                     "keyboard",
                     "options",
                     "replay",
                     "share_on_ios",
                     "spark",
                     "star_outlined",
                     "text",
                     "textbook",
                     "time_speed"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "arrow",
                           "answer_bubble",
                           "ask_bubble",
                           "backward_5s",
                           "backward_end",
                           "barcode_scanner",
                           "chapter",
                           "clear",
                           "comment",
                           "crown",
                           "crown_outlined",
                           "cup",
                           "filters",
                           "flashlight_off",
                           "flashlight_on",
                           "forward_5s",
                           "heart_outlined",
                           "info",
                           "keyboard",
                           "options",
                           "replay",
                           "share_on_ios",
                           "spark",
                           "star_outlined",
                           "text",
                           "textbook",
                           "time_speed"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "104",
                     "102",
                     "80",
                     "78",
                     "56",
                     "54",
                     "40",
                     "32",
                     "30",
                     "26",
                     "24",
                     "22",
                     "20",
                     "18",
                     "16",
                     "14",
                     "10"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "104",
                           "102",
                           "80",
                           "78",
                           "56",
                           "54",
                           "40",
                           "32",
                           "30",
                           "26",
                           "24",
                           "22",
                           "20",
                           "18",
                           "16",
                           "14",
                           "10"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": 24,
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "default": "light",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "type"
         ],
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "arrow",
                  "answer_bubble",
                  "ask_bubble",
                  "backward_5s",
                  "backward_end",
                  "barcode_scanner",
                  "chapter",
                  "clear",
                  "comment",
                  "crown",
                  "crown_outlined",
                  "cup",
                  "filters",
                  "flashlight_off",
                  "flashlight_on",
                  "forward_5s",
                  "heart_outlined",
                  "info",
                  "keyboard",
                  "options",
                  "replay",
                  "share_on_ios",
                  "spark",
                  "star_outlined",
                  "text",
                  "textbook",
                  "time_speed"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "arrow",
                        "answer_bubble",
                        "ask_bubble",
                        "backward_5s",
                        "backward_end",
                        "barcode_scanner",
                        "chapter",
                        "clear",
                        "comment",
                        "crown",
                        "crown_outlined",
                        "cup",
                        "filters",
                        "flashlight_off",
                        "flashlight_on",
                        "forward_5s",
                        "heart_outlined",
                        "info",
                        "keyboard",
                        "options",
                        "replay",
                        "share_on_ios",
                        "spark",
                        "star_outlined",
                        "text",
                        "textbook",
                        "time_speed"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "104",
                  "102",
                  "80",
                  "78",
                  "56",
                  "54",
                  "40",
                  "32",
                  "30",
                  "26",
                  "24",
                  "22",
                  "20",
                  "18",
                  "16",
                  "14",
                  "10"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "104",
                        "102",
                        "80",
                        "78",
                        "56",
                        "54",
                        "40",
                        "32",
                        "30",
                        "26",
                        "24",
                        "22",
                        "20",
                        "18",
                        "16",
                        "14",
                        "10"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": 24,
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "default": "light",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "MobileIcon"
               }
            ]
         ],
         "ignored": false
      },
      "LabelDeprecated": {
         "id": "BrainlyStyleGuide_LabelDeprecated",
         "name": "LabelDeprecated",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "LabelDeprecated"
         },
         "resolved": {
            "relativePath": "src/components/labels-deprecated/LabelDeprecated.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "LabelDeprecated"
               },
               {
                  "relativePath": "src/components/labels-deprecated/LabelDeprecated.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "text": {
                  "name": "text",
                  "type": "string",
                  "source": "parsing"
               },
               "htmlFor": {
                  "name": "htmlFor",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "iconContent": {
                  "name": "iconContent",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "iconColor": {
                  "name": "iconColor",
                  "type": "unknown",
                  "source": "parsing"
               },
               "iconType": {
                  "name": "iconType",
                  "type": "unknown",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "normal",
                     "large"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "normal",
                           "large"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "number": {
                  "name": "number",
                  "type": "number",
                  "source": "parsing"
               },
               "secondary": {
                  "name": "secondary",
                  "type": "boolean",
                  "source": "parsing"
               },
               "unstyled": {
                  "name": "unstyled",
                  "type": "boolean",
                  "source": "parsing"
               },
               "emphasised": {
                  "name": "emphasised",
                  "type": "boolean",
                  "source": "parsing"
               },
               "elementsToTop": {
                  "name": "elementsToTop",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "text": {
               "name": "text",
               "type": "string",
               "source": "parsing"
            },
            "htmlFor": {
               "name": "htmlFor",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "iconContent": {
               "name": "iconContent",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "iconColor": {
               "name": "iconColor",
               "type": "unknown",
               "source": "parsing"
            },
            "iconType": {
               "name": "iconType",
               "type": "unknown",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "normal",
                  "large"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "normal",
                        "large"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "number": {
               "name": "number",
               "type": "number",
               "source": "parsing"
            },
            "secondary": {
               "name": "secondary",
               "type": "boolean",
               "source": "parsing"
            },
            "unstyled": {
               "name": "unstyled",
               "type": "boolean",
               "source": "parsing"
            },
            "emphasised": {
               "name": "emphasised",
               "type": "boolean",
               "source": "parsing"
            },
            "elementsToTop": {
               "name": "elementsToTop",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "LabelDeprecated"
               }
            ]
         ],
         "ignored": false
      },
      "Label": {
         "id": "BrainlyStyleGuide_Label",
         "name": "Label",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Label"
         },
         "resolved": {
            "relativePath": "src/components/labels/Label.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Label"
               },
               {
                  "relativePath": "src/components/labels/Label.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "default",
                     "solid",
                     "transparent",
                     "transparent-color"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "solid",
                           "transparent",
                           "transparent-color"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "default",
                  "description": "Specify type of label",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "blue",
                     "mint",
                     "lavender",
                     "peach",
                     "mustard",
                     "gray",
                     "achromatic"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "blue",
                           "mint",
                           "lavender",
                           "peach",
                           "mustard",
                           "gray",
                           "achromatic"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "achromatic",
                  "description": "Specify color for label",
                  "source": "parsing"
               },
               "iconType": {
                  "name": "iconType",
                  "type": "string",
                  "enum": [
                     "academic_cap",
                     "all_questions",
                     "answer",
                     "arrow_double_down",
                     "arrow_down",
                     "arrow_left",
                     "arrow_right",
                     "arrow_up",
                     "ask_bubble",
                     "ask_parent_to_pay",
                     "attachment",
                     "bell_checked",
                     "bell_outlined",
                     "bold",
                     "bulleted_list",
                     "calendar",
                     "camera",
                     "chapter",
                     "check",
                     "clipboard",
                     "close",
                     "comment",
                     "comment_outlined",
                     "counter",
                     "credit_card",
                     "crown_outlined",
                     "cup",
                     "equation",
                     "excellent",
                     "exclamation_mark",
                     "facebook",
                     "filters",
                     "friend_add",
                     "friend_remove",
                     "friend_pending",
                     "friend_checked",
                     "friends",
                     "fullscreen",
                     "funnel",
                     "heading",
                     "heart",
                     "heart_outlined",
                     "image",
                     "influence",
                     "instagram",
                     "italic",
                     "less",
                     "linkedin",
                     "lock_with_play",
                     "logout",
                     "medium",
                     "menu",
                     "messages",
                     "mic",
                     "money_transfer",
                     "add_more",
                     "notifications",
                     "numbered_list",
                     "open_in_new_tab",
                     "padlock",
                     "pencil",
                     "play",
                     "plus",
                     "points",
                     "profile",
                     "profile_view",
                     "question",
                     "recent_questions",
                     "reload",
                     "report_flag",
                     "report_flag_outlined",
                     "rotate",
                     "rotate_90",
                     "search",
                     "seen",
                     "send",
                     "settings",
                     "share",
                     "sms",
                     "star",
                     "star_half",
                     "star_half_outlined",
                     "star_outlined",
                     "subtitle",
                     "symbols",
                     "title",
                     "toughest_questions",
                     "trash",
                     "twitter",
                     "underlined",
                     "unseen",
                     "verified",
                     "warning",
                     "youtube",
                     "arrow_top_right",
                     "circle",
                     "crop",
                     "cyrillic",
                     "draw",
                     "drawing_mode",
                     "european",
                     "greek",
                     "highlight",
                     "line",
                     "more",
                     "pause",
                     "rectangle",
                     "sup_sub",
                     "triangle",
                     "pi",
                     "quote",
                     "spark",
                     "dot",
                     "clear"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "academic_cap",
                           "all_questions",
                           "answer",
                           "arrow_double_down",
                           "arrow_down",
                           "arrow_left",
                           "arrow_right",
                           "arrow_up",
                           "ask_bubble",
                           "ask_parent_to_pay",
                           "attachment",
                           "bell_checked",
                           "bell_outlined",
                           "bold",
                           "bulleted_list",
                           "calendar",
                           "camera",
                           "chapter",
                           "check",
                           "clipboard",
                           "close",
                           "comment",
                           "comment_outlined",
                           "counter",
                           "credit_card",
                           "crown_outlined",
                           "cup",
                           "equation",
                           "excellent",
                           "exclamation_mark",
                           "facebook",
                           "filters",
                           "friend_add",
                           "friend_remove",
                           "friend_pending",
                           "friend_checked",
                           "friends",
                           "fullscreen",
                           "funnel",
                           "heading",
                           "heart",
                           "heart_outlined",
                           "image",
                           "influence",
                           "instagram",
                           "italic",
                           "less",
                           "linkedin",
                           "lock_with_play",
                           "logout",
                           "medium",
                           "menu",
                           "messages",
                           "mic",
                           "money_transfer",
                           "add_more",
                           "notifications",
                           "numbered_list",
                           "open_in_new_tab",
                           "padlock",
                           "pencil",
                           "play",
                           "plus",
                           "points",
                           "profile",
                           "profile_view",
                           "question",
                           "recent_questions",
                           "reload",
                           "report_flag",
                           "report_flag_outlined",
                           "rotate",
                           "rotate_90",
                           "search",
                           "seen",
                           "send",
                           "settings",
                           "share",
                           "sms",
                           "star",
                           "star_half",
                           "star_half_outlined",
                           "star_outlined",
                           "subtitle",
                           "symbols",
                           "title",
                           "toughest_questions",
                           "trash",
                           "twitter",
                           "underlined",
                           "unseen",
                           "verified",
                           "warning",
                           "youtube",
                           "arrow_top_right",
                           "circle",
                           "crop",
                           "cyrillic",
                           "draw",
                           "drawing_mode",
                           "european",
                           "greek",
                           "highlight",
                           "line",
                           "more",
                           "pause",
                           "rectangle",
                           "sup_sub",
                           "triangle",
                           "pi",
                           "quote",
                           "spark",
                           "dot",
                           "clear"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "description": "Icons types example, see more in SG interactive",
                  "source": "parsing"
               },
               "onClose": {
                  "name": "onClose",
                  "type": "Event",
                  "description": "Callback, called by clicking on **close** button. If specified, button will be added automatically",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be rendered inside Label",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "default",
                  "solid",
                  "transparent",
                  "transparent-color"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "solid",
                        "transparent",
                        "transparent-color"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "default",
               "description": "Specify type of label",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "blue",
                  "mint",
                  "lavender",
                  "peach",
                  "mustard",
                  "gray",
                  "achromatic"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "blue",
                        "mint",
                        "lavender",
                        "peach",
                        "mustard",
                        "gray",
                        "achromatic"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "achromatic",
               "description": "Specify color for label",
               "source": "parsing"
            },
            "iconType": {
               "name": "iconType",
               "type": "string",
               "enum": [
                  "academic_cap",
                  "all_questions",
                  "answer",
                  "arrow_double_down",
                  "arrow_down",
                  "arrow_left",
                  "arrow_right",
                  "arrow_up",
                  "ask_bubble",
                  "ask_parent_to_pay",
                  "attachment",
                  "bell_checked",
                  "bell_outlined",
                  "bold",
                  "bulleted_list",
                  "calendar",
                  "camera",
                  "chapter",
                  "check",
                  "clipboard",
                  "close",
                  "comment",
                  "comment_outlined",
                  "counter",
                  "credit_card",
                  "crown_outlined",
                  "cup",
                  "equation",
                  "excellent",
                  "exclamation_mark",
                  "facebook",
                  "filters",
                  "friend_add",
                  "friend_remove",
                  "friend_pending",
                  "friend_checked",
                  "friends",
                  "fullscreen",
                  "funnel",
                  "heading",
                  "heart",
                  "heart_outlined",
                  "image",
                  "influence",
                  "instagram",
                  "italic",
                  "less",
                  "linkedin",
                  "lock_with_play",
                  "logout",
                  "medium",
                  "menu",
                  "messages",
                  "mic",
                  "money_transfer",
                  "add_more",
                  "notifications",
                  "numbered_list",
                  "open_in_new_tab",
                  "padlock",
                  "pencil",
                  "play",
                  "plus",
                  "points",
                  "profile",
                  "profile_view",
                  "question",
                  "recent_questions",
                  "reload",
                  "report_flag",
                  "report_flag_outlined",
                  "rotate",
                  "rotate_90",
                  "search",
                  "seen",
                  "send",
                  "settings",
                  "share",
                  "sms",
                  "star",
                  "star_half",
                  "star_half_outlined",
                  "star_outlined",
                  "subtitle",
                  "symbols",
                  "title",
                  "toughest_questions",
                  "trash",
                  "twitter",
                  "underlined",
                  "unseen",
                  "verified",
                  "warning",
                  "youtube",
                  "arrow_top_right",
                  "circle",
                  "crop",
                  "cyrillic",
                  "draw",
                  "drawing_mode",
                  "european",
                  "greek",
                  "highlight",
                  "line",
                  "more",
                  "pause",
                  "rectangle",
                  "sup_sub",
                  "triangle",
                  "pi",
                  "quote",
                  "spark",
                  "dot",
                  "clear"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "academic_cap",
                        "all_questions",
                        "answer",
                        "arrow_double_down",
                        "arrow_down",
                        "arrow_left",
                        "arrow_right",
                        "arrow_up",
                        "ask_bubble",
                        "ask_parent_to_pay",
                        "attachment",
                        "bell_checked",
                        "bell_outlined",
                        "bold",
                        "bulleted_list",
                        "calendar",
                        "camera",
                        "chapter",
                        "check",
                        "clipboard",
                        "close",
                        "comment",
                        "comment_outlined",
                        "counter",
                        "credit_card",
                        "crown_outlined",
                        "cup",
                        "equation",
                        "excellent",
                        "exclamation_mark",
                        "facebook",
                        "filters",
                        "friend_add",
                        "friend_remove",
                        "friend_pending",
                        "friend_checked",
                        "friends",
                        "fullscreen",
                        "funnel",
                        "heading",
                        "heart",
                        "heart_outlined",
                        "image",
                        "influence",
                        "instagram",
                        "italic",
                        "less",
                        "linkedin",
                        "lock_with_play",
                        "logout",
                        "medium",
                        "menu",
                        "messages",
                        "mic",
                        "money_transfer",
                        "add_more",
                        "notifications",
                        "numbered_list",
                        "open_in_new_tab",
                        "padlock",
                        "pencil",
                        "play",
                        "plus",
                        "points",
                        "profile",
                        "profile_view",
                        "question",
                        "recent_questions",
                        "reload",
                        "report_flag",
                        "report_flag_outlined",
                        "rotate",
                        "rotate_90",
                        "search",
                        "seen",
                        "send",
                        "settings",
                        "share",
                        "sms",
                        "star",
                        "star_half",
                        "star_half_outlined",
                        "star_outlined",
                        "subtitle",
                        "symbols",
                        "title",
                        "toughest_questions",
                        "trash",
                        "twitter",
                        "underlined",
                        "unseen",
                        "verified",
                        "warning",
                        "youtube",
                        "arrow_top_right",
                        "circle",
                        "crop",
                        "cyrillic",
                        "draw",
                        "drawing_mode",
                        "european",
                        "greek",
                        "highlight",
                        "line",
                        "more",
                        "pause",
                        "rectangle",
                        "sup_sub",
                        "triangle",
                        "pi",
                        "quote",
                        "spark",
                        "dot",
                        "clear"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "description": "Icons types example, see more in SG interactive",
               "source": "parsing"
            },
            "onClose": {
               "name": "onClose",
               "type": "Event",
               "description": "Callback, called by clicking on **close** button. If specified, button will be added automatically",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be rendered inside Label",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Label"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "FileHandler": {
         "id": "BrainlyStyleGuide_FileHandler",
         "name": "FileHandler",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "FileHandler"
         },
         "resolved": {
            "relativePath": "src/components/file-handler/FileHandler.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "FileHandler"
               },
               {
                  "relativePath": "src/components/file-handler/FileHandler.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "gray",
                     "white"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "gray",
                           "white"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "gray",
                  "description": "Specify color of the background for FileHandler",
                  "source": "parsing"
               },
               "iconType": {
                  "name": "iconType",
                  "type": "string",
                  "default": "attachment",
                  "description": "Specify iconType to display SG icon as the image inside FileHandler",
                  "source": "parsing"
               },
               "thumbnailSrc": {
                  "name": "thumbnailSrc",
                  "type": "string",
                  "description": "Specify thumbnailSrc of the image inside FileHandler",
                  "source": "parsing"
               },
               "src": {
                  "name": "src",
                  "type": "string",
                  "description": "Specify src of the file to display it in the new tab when link is clicked",
                  "source": "parsing"
               },
               "loading": {
                  "name": "loading",
                  "type": "boolean",
                  "default": false,
                  "description": "Optional boolean for loading state of FileHandler",
                  "source": "parsing"
               },
               "onClose": {
                  "name": "onClose",
                  "type": "Event",
                  "description": "Callback, called by clicking on **close** button. If specified, button will be added automatically",
                  "source": "parsing"
               },
               "onClick": {
                  "name": "onClick",
                  "type": "Event",
                  "description": "Callback, called by clicking on link",
                  "source": "parsing"
               },
               "textRef": {
                  "name": "textRef",
                  "type": "Event",
                  "description": "Additional function to set ref for text",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "description": "Additional class names",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "description": "Children to be rendered inside FileHandler",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "gray",
                  "white"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "gray",
                        "white"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "gray",
               "description": "Specify color of the background for FileHandler",
               "source": "parsing"
            },
            "iconType": {
               "name": "iconType",
               "type": "string",
               "default": "attachment",
               "description": "Specify iconType to display SG icon as the image inside FileHandler",
               "source": "parsing"
            },
            "thumbnailSrc": {
               "name": "thumbnailSrc",
               "type": "string",
               "description": "Specify thumbnailSrc of the image inside FileHandler",
               "source": "parsing"
            },
            "src": {
               "name": "src",
               "type": "string",
               "description": "Specify src of the file to display it in the new tab when link is clicked",
               "source": "parsing"
            },
            "loading": {
               "name": "loading",
               "type": "boolean",
               "default": false,
               "description": "Optional boolean for loading state of FileHandler",
               "source": "parsing"
            },
            "onClose": {
               "name": "onClose",
               "type": "Event",
               "description": "Callback, called by clicking on **close** button. If specified, button will be added automatically",
               "source": "parsing"
            },
            "onClick": {
               "name": "onClick",
               "type": "Event",
               "description": "Callback, called by clicking on link",
               "source": "parsing"
            },
            "textRef": {
               "name": "textRef",
               "type": "Event",
               "description": "Additional function to set ref for text",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "description": "Additional class names",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "description": "Children to be rendered inside FileHandler",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "FileHandler"
               }
            ]
         ],
         "ignored": false
      },
      "Layout": {
         "id": "BrainlyStyleGuide_Layout",
         "name": "Layout",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Layout"
         },
         "resolved": {
            "relativePath": "src/components/layout/Layout.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Layout"
               },
               {
                  "relativePath": "src/components/layout/Layout.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "containerClassName": {
                  "name": "containerClassName",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "header": {
                  "name": "header",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "footer": {
                  "name": "footer",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "noMaxWidth": {
                  "name": "noMaxWidth",
                  "type": "boolean",
                  "source": "parsing"
               },
               "noMarginTop": {
                  "name": "noMarginTop",
                  "type": "boolean",
                  "source": "parsing"
               },
               "reversedOrder": {
                  "name": "reversedOrder",
                  "type": "boolean",
                  "source": "parsing"
               },
               "fullPage": {
                  "name": "fullPage",
                  "type": "boolean",
                  "source": "parsing"
               },
               "threeColumns": {
                  "name": "threeColumns",
                  "type": "boolean",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "containerClassName": {
               "name": "containerClassName",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "header": {
               "name": "header",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "footer": {
               "name": "footer",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "noMaxWidth": {
               "name": "noMaxWidth",
               "type": "boolean",
               "source": "parsing"
            },
            "noMarginTop": {
               "name": "noMarginTop",
               "type": "boolean",
               "source": "parsing"
            },
            "reversedOrder": {
               "name": "reversedOrder",
               "type": "boolean",
               "source": "parsing"
            },
            "fullPage": {
               "name": "fullPage",
               "type": "boolean",
               "source": "parsing"
            },
            "threeColumns": {
               "name": "threeColumns",
               "type": "boolean",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Layout"
               }
            ]
         ],
         "ignored": false
      },
      "LayoutAsideContent": {
         "id": "BrainlyStyleGuide_LayoutAsideContent",
         "name": "LayoutAsideContent",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "LayoutAsideContent"
         },
         "resolved": {
            "relativePath": "src/components/layout/LayoutAsideContent.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "LayoutAsideContent"
               },
               {
                  "relativePath": "src/components/layout/LayoutAsideContent.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "LayoutAsideContent"
               }
            ]
         ],
         "ignored": false
      },
      "LayoutContent": {
         "id": "BrainlyStyleGuide_LayoutContent",
         "name": "LayoutContent",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "LayoutContent"
         },
         "resolved": {
            "relativePath": "src/components/layout/LayoutContent.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "LayoutContent"
               },
               {
                  "relativePath": "src/components/layout/LayoutContent.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "noMaxWidth": {
                  "name": "noMaxWidth",
                  "type": "boolean",
                  "source": "parsing"
               },
               "center": {
                  "name": "center",
                  "type": "boolean",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "noMaxWidth": {
               "name": "noMaxWidth",
               "type": "boolean",
               "source": "parsing"
            },
            "center": {
               "name": "center",
               "type": "boolean",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "LayoutContent"
               }
            ]
         ],
         "ignored": false
      },
      "LayoutSecondaryContent": {
         "id": "BrainlyStyleGuide_LayoutSecondaryContent",
         "name": "LayoutSecondaryContent",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "LayoutSecondaryContent"
         },
         "resolved": {
            "relativePath": "src/components/layout/LayoutSecondaryContent.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "LayoutSecondaryContent"
               },
               {
                  "relativePath": "src/components/layout/LayoutSecondaryContent.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "LayoutSecondaryContent"
               }
            ]
         ],
         "ignored": false
      },
      "List": {
         "id": "BrainlyStyleGuide_List",
         "name": "List",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "List"
         },
         "resolved": {
            "relativePath": "src/components/list/List.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "List"
               },
               {
                  "relativePath": "src/components/list/List.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "spaced": {
                  "name": "spaced",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_ListItem"
                  ]
               }
            },
            "spaced": {
               "name": "spaced",
               "type": "boolean",
               "source": "parsing",
               "used": true
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "List"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "ListItem": {
         "id": "BrainlyStyleGuide_ListItem",
         "name": "ListItem",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ListItem"
         },
         "resolved": {
            "relativePath": "src/components/list/ListItem.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ListItem"
               },
               {
                  "relativePath": "src/components/list/ListItem.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_ListItemIcon",
                     "BrainlyStyleGuide_Text"
                  ]
               }
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ListItem"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "ListItemIcon": {
         "id": "BrainlyStyleGuide_ListItemIcon",
         "name": "ListItemIcon",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "ListItemIcon"
         },
         "resolved": {
            "relativePath": "src/components/list/ListItemIcon.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "ListItemIcon"
               },
               {
                  "relativePath": "src/components/list/ListItemIcon.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "small": {
                  "name": "small",
                  "type": "boolean",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_Icon"
                  ]
               }
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "small": {
               "name": "small",
               "type": "boolean",
               "source": "parsing",
               "used": true
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "ListItemIcon"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "MenuList": {
         "id": "BrainlyStyleGuide_MenuList",
         "name": "MenuList",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "MenuList"
         },
         "resolved": {
            "relativePath": "src/components/list/MenuList.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "MenuList"
               },
               {
                  "relativePath": "src/components/list/MenuList.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "normal",
                     "large"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "normal",
                           "large"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "normal",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "items": {
                  "name": "items",
                  "type": "array",
                  "items": {
                     "type": "MenuItemPropsType"
                  },
                  "default": [],
                  "source": "parsing"
               }
            }
         },
         "props": {
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "normal",
                  "large"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "normal",
                        "large"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "normal",
               "source": "parsing",
               "used": true
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "items": {
               "name": "items",
               "type": "array",
               "items": {
                  "type": "MenuItemPropsType"
               },
               "default": [],
               "source": "parsing",
               "used": true
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "MenuList"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Logo": {
         "id": "BrainlyStyleGuide_Logo",
         "name": "Logo",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Logo"
         },
         "resolved": {
            "relativePath": "src/components/logo/Logo.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Logo"
               },
               {
                  "relativePath": "src/components/logo/Logo.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "brainly",
                     "brainly-mobile",
                     "eodev",
                     "eodev-mobile",
                     "nosdevoirs",
                     "nosdevoirs-mobile",
                     "znanija",
                     "znanija-mobile",
                     "znanija-plus",
                     "znanija-plus-inverse",
                     "znanija-plus-small",
                     "brainly-plus",
                     "brainly-plus-inverse",
                     "brainly-plus-small",
                     "brainly-tutoring",
                     "brainly-tutoring-small"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "brainly",
                           "brainly-mobile",
                           "eodev",
                           "eodev-mobile",
                           "nosdevoirs",
                           "nosdevoirs-mobile",
                           "znanija",
                           "znanija-mobile",
                           "znanija-plus",
                           "znanija-plus-inverse",
                           "znanija-plus-small",
                           "brainly-plus",
                           "brainly-plus-inverse",
                           "brainly-plus-small",
                           "brainly-tutoring",
                           "brainly-tutoring-small"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "brainly",
                  "source": "parsing"
               },
               "alt": {
                  "name": "alt",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "brainly",
                  "brainly-mobile",
                  "eodev",
                  "eodev-mobile",
                  "nosdevoirs",
                  "nosdevoirs-mobile",
                  "znanija",
                  "znanija-mobile",
                  "znanija-plus",
                  "znanija-plus-inverse",
                  "znanija-plus-small",
                  "brainly-plus",
                  "brainly-plus-inverse",
                  "brainly-plus-small",
                  "brainly-tutoring",
                  "brainly-tutoring-small"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "brainly",
                        "brainly-mobile",
                        "eodev",
                        "eodev-mobile",
                        "nosdevoirs",
                        "nosdevoirs-mobile",
                        "znanija",
                        "znanija-mobile",
                        "znanija-plus",
                        "znanija-plus-inverse",
                        "znanija-plus-small",
                        "brainly-plus",
                        "brainly-plus-inverse",
                        "brainly-plus-small",
                        "brainly-tutoring",
                        "brainly-tutoring-small"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "brainly",
               "source": "parsing"
            },
            "alt": {
               "name": "alt",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Logo"
               }
            ]
         ],
         "ignored": false
      },
      "MathSymbol": {
         "id": "BrainlyStyleGuide_MathSymbol",
         "name": "MathSymbol",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "MathSymbol"
         },
         "resolved": {
            "relativePath": "src/components/math-symbols/MathSymbol.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "MathSymbol"
               },
               {
                  "relativePath": "src/components/math-symbols/MathSymbol.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "squere-root",
                     "nth-root",
                     "power",
                     "subscript",
                     "less-then-or-equal",
                     "greater-then-or-equal",
                     "inequality",
                     "division",
                     "pi",
                     "alpha",
                     "beta",
                     "line",
                     "limit",
                     "matrix",
                     "integral",
                     "equation-system"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "squere-root",
                           "nth-root",
                           "power",
                           "subscript",
                           "less-then-or-equal",
                           "greater-then-or-equal",
                           "inequality",
                           "division",
                           "pi",
                           "alpha",
                           "beta",
                           "line",
                           "limit",
                           "matrix",
                           "integral",
                           "equation-system"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "medium",
                     "normal"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "medium",
                           "normal"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "normal",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "unknown",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "type"
         ],
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "squere-root",
                  "nth-root",
                  "power",
                  "subscript",
                  "less-then-or-equal",
                  "greater-then-or-equal",
                  "inequality",
                  "division",
                  "pi",
                  "alpha",
                  "beta",
                  "line",
                  "limit",
                  "matrix",
                  "integral",
                  "equation-system"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "squere-root",
                        "nth-root",
                        "power",
                        "subscript",
                        "less-then-or-equal",
                        "greater-then-or-equal",
                        "inequality",
                        "division",
                        "pi",
                        "alpha",
                        "beta",
                        "line",
                        "limit",
                        "matrix",
                        "integral",
                        "equation-system"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "medium",
                  "normal"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "medium",
                        "normal"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "normal",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "unknown",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "MathSymbol"
               }
            ]
         ],
         "ignored": false
      },
      "Media": {
         "id": "BrainlyStyleGuide_Media",
         "name": "Media",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Media"
         },
         "resolved": {
            "relativePath": "src/components/media/Media.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Media"
               },
               {
                  "relativePath": "src/components/media/Media.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "aside": {
                  "name": "aside",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "contentArray": {
                  "name": "contentArray",
                  "type": "array",
                  "items": {
                     "type": "ReactNode"
                  },
                  "source": "parsing"
               },
               "toRight": {
                  "name": "toRight",
                  "type": "boolean",
                  "source": "parsing"
               },
               "focused": {
                  "name": "focused",
                  "type": "boolean",
                  "source": "parsing"
               },
               "clickable": {
                  "name": "clickable",
                  "type": "boolean",
                  "source": "parsing"
               },
               "noPadding": {
                  "name": "noPadding",
                  "type": "boolean",
                  "source": "parsing"
               },
               "transparent": {
                  "name": "transparent",
                  "type": "boolean",
                  "source": "parsing"
               },
               "graySecondaryLight": {
                  "name": "graySecondaryLight",
                  "type": "boolean",
                  "source": "parsing"
               },
               "small": {
                  "name": "small",
                  "type": "boolean",
                  "source": "parsing"
               },
               "spacedBottom": {
                  "name": "spacedBottom",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "aside",
            "contentArray"
         ],
         "props": {
            "aside": {
               "name": "aside",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "contentArray": {
               "name": "contentArray",
               "type": "array",
               "items": {
                  "type": "ReactNode"
               },
               "source": "parsing"
            },
            "toRight": {
               "name": "toRight",
               "type": "boolean",
               "source": "parsing"
            },
            "focused": {
               "name": "focused",
               "type": "boolean",
               "source": "parsing"
            },
            "clickable": {
               "name": "clickable",
               "type": "boolean",
               "source": "parsing"
            },
            "noPadding": {
               "name": "noPadding",
               "type": "boolean",
               "source": "parsing"
            },
            "transparent": {
               "name": "transparent",
               "type": "boolean",
               "source": "parsing"
            },
            "graySecondaryLight": {
               "name": "graySecondaryLight",
               "type": "boolean",
               "source": "parsing"
            },
            "small": {
               "name": "small",
               "type": "boolean",
               "source": "parsing"
            },
            "spacedBottom": {
               "name": "spacedBottom",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Media"
               }
            ]
         ],
         "ignored": false
      },
      "Overlay": {
         "id": "BrainlyStyleGuide_Overlay",
         "name": "Overlay",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Overlay"
         },
         "resolved": {
            "relativePath": "src/components/overlay/Overlay.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Overlay"
               },
               {
                  "relativePath": "src/components/overlay/Overlay.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "partial": {
                  "name": "partial",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "unknown",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "partial": {
               "name": "partial",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "unknown",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Overlay"
               }
            ]
         ],
         "ignored": false
      },
      "OverlayedBox": {
         "id": "BrainlyStyleGuide_OverlayedBox",
         "name": "OverlayedBox",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "OverlayedBox"
         },
         "resolved": {
            "relativePath": "src/components/overlayed-box/OverlayedBox.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "OverlayedBox"
               },
               {
                  "relativePath": "src/components/overlayed-box/OverlayedBox.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "overlay": {
                  "name": "overlay",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "overlay": {
               "name": "overlay",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "OverlayedBox"
               }
            ]
         ],
         "ignored": false
      },
      "PopupMenu": {
         "id": "BrainlyStyleGuide_PopupMenu",
         "name": "PopupMenu",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "PopupMenu"
         },
         "resolved": {
            "relativePath": "src/components/popup-menu/PopupMenu.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "PopupMenu"
               },
               {
                  "relativePath": "src/components/popup-menu/PopupMenu.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "items": {
                  "name": "items",
                  "type": "array",
                  "items": {
                     "type": "ReactNode"
                  },
                  "default": [],
                  "source": "parsing"
               },
               "extraSpacing": {
                  "name": "extraSpacing",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "items": {
               "name": "items",
               "type": "array",
               "items": {
                  "type": "ReactNode"
               },
               "default": [],
               "source": "parsing"
            },
            "extraSpacing": {
               "name": "extraSpacing",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "PopupMenu"
               }
            ]
         ],
         "ignored": false
      },
      "Rating": {
         "id": "BrainlyStyleGuide_Rating",
         "name": "Rating",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Rating"
         },
         "resolved": {
            "relativePath": "src/components/rating/Rating.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Rating"
               },
               {
                  "relativePath": "src/components/rating/Rating.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {},
         "used": true,
         "props": {
            "rate": {
               "name": "rate",
               "type": "number",
               "used": true
            },
            "counterText": {
               "name": "counterText",
               "type": "string",
               "used": true
            },
            "activeText": {
               "name": "activeText",
               "type": "string",
               "used": true
            }
         },
         "overrides": {
            "props": {
               "rate": {
                  "source": "example",
                  "relativePath": "src/components/rating/Rating.stories.jsx",
                  "prev": null,
                  "new": {
                     "name": "rate",
                     "type": "number",
                     "used": true
                  }
               },
               "counterText": {
                  "source": "example",
                  "relativePath": "src/components/rating/Rating.stories.jsx",
                  "prev": null,
                  "new": {
                     "name": "counterText",
                     "type": "string",
                     "used": true
                  }
               },
               "activeText": {
                  "source": "example",
                  "relativePath": "src/components/rating/Rating.stories.jsx",
                  "prev": null,
                  "new": {
                     "name": "activeText",
                     "type": "string",
                     "used": true
                  }
               }
            }
         },
         "ignored": false
      },
      "Search": {
         "id": "BrainlyStyleGuide_Search",
         "name": "Search",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Search"
         },
         "resolved": {
            "relativePath": "src/components/search/Search.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Search"
               },
               {
                  "relativePath": "src/components/search/Search.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "inputClassName": {
                  "name": "inputClassName",
                  "type": "string",
                  "source": "parsing"
               },
               "withRoundButton": {
                  "name": "withRoundButton",
                  "type": "boolean",
                  "default": false,
                  "source": "parsing"
               }
            }
         },
         "props": {
            "inputClassName": {
               "name": "inputClassName",
               "type": "string",
               "source": "parsing"
            },
            "withRoundButton": {
               "name": "withRoundButton",
               "type": "boolean",
               "default": false,
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Search"
               }
            ]
         ],
         "ignored": false
      },
      "SeparatorHorizontal": {
         "id": "BrainlyStyleGuide_SeparatorHorizontal",
         "name": "SeparatorHorizontal",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "SeparatorHorizontal"
         },
         "resolved": {
            "relativePath": "src/components/separators/SeparatorHorizontal.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "SeparatorHorizontal"
               },
               {
                  "relativePath": "src/components/separators/SeparatorHorizontal.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "normal",
                     "spaced",
                     "short-spaced"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "normal",
                           "spaced",
                           "short-spaced"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "normal",
                  "source": "parsing"
               },
               "white": {
                  "name": "white",
                  "type": "boolean",
                  "source": "parsing"
               },
               "grayDark": {
                  "name": "grayDark",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "normal",
                  "spaced",
                  "short-spaced"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "normal",
                        "spaced",
                        "short-spaced"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "normal",
               "source": "parsing"
            },
            "white": {
               "name": "white",
               "type": "boolean",
               "source": "parsing"
            },
            "grayDark": {
               "name": "grayDark",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "SeparatorHorizontal"
               }
            ]
         ],
         "ignored": false
      },
      "SeparatorVertical": {
         "id": "BrainlyStyleGuide_SeparatorVertical",
         "name": "Separator",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "SeparatorVertical"
         },
         "resolved": {
            "relativePath": "src/components/separators/SeparatorVertical.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "SeparatorVertical"
               },
               {
                  "relativePath": "src/components/separators/SeparatorVertical.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "normal",
                     "small",
                     "large",
                     "full"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "normal",
                           "small",
                           "large",
                           "full"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "normal",
                  "source": "parsing"
               },
               "white": {
                  "name": "white",
                  "type": "boolean",
                  "source": "parsing"
               },
               "grayDark": {
                  "name": "grayDark",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "normal",
                  "small",
                  "large",
                  "full"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "normal",
                        "small",
                        "large",
                        "full"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "normal",
               "source": "parsing"
            },
            "white": {
               "name": "white",
               "type": "boolean",
               "source": "parsing"
            },
            "grayDark": {
               "name": "grayDark",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Separator"
               }
            ]
         ],
         "ignored": false
      },
      "Spinner": {
         "id": "BrainlyStyleGuide_Spinner",
         "name": "Spinner",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Spinner"
         },
         "resolved": {
            "relativePath": "src/components/spinner/Spinner.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Spinner"
               },
               {
                  "relativePath": "src/components/spinner/Spinner.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "black",
                     "white",
                     "gray-900",
                     "gray-700",
                     "peach-700",
                     "mustard-700",
                     "blue-700"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "black",
                           "white",
                           "gray-900",
                           "gray-700",
                           "peach-700",
                           "mustard-700",
                           "blue-700"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "black",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "xsmall",
                     "xxsmall"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "xsmall",
                           "xxsmall"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "small",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "black",
                  "white",
                  "gray-900",
                  "gray-700",
                  "peach-700",
                  "mustard-700",
                  "blue-700"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "black",
                        "white",
                        "gray-900",
                        "gray-700",
                        "peach-700",
                        "mustard-700",
                        "blue-700"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "black",
               "source": "parsing",
               "used": true
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "xsmall",
                  "xxsmall"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "xsmall",
                        "xxsmall"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "small",
               "source": "parsing",
               "used": true
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Spinner"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "SpinnerContainer": {
         "id": "BrainlyStyleGuide_SpinnerContainer",
         "name": "SpinnerContainer",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "SpinnerContainer"
         },
         "resolved": {
            "relativePath": "src/components/spinner-container/SpinnerContainer.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "SpinnerContainer"
               },
               {
                  "relativePath": "src/components/spinner-container/SpinnerContainer.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "loading": {
                  "name": "loading",
                  "type": "boolean",
                  "source": "parsing"
               },
               "light": {
                  "name": "light",
                  "type": "boolean",
                  "source": "parsing"
               },
               "fullWidth": {
                  "name": "fullWidth",
                  "type": "boolean",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "unknown",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               }
            }
         },
         "props": {
            "loading": {
               "name": "loading",
               "type": "boolean",
               "source": "parsing"
            },
            "light": {
               "name": "light",
               "type": "boolean",
               "source": "parsing"
            },
            "fullWidth": {
               "name": "fullWidth",
               "type": "boolean",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "unknown",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "SpinnerContainer"
               }
            ]
         ],
         "ignored": false
      },
      "SubjectIcon": {
         "id": "BrainlyStyleGuide_SubjectIcon",
         "name": "SubjectIcon",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "SubjectIcon"
         },
         "resolved": {
            "relativePath": "src/components/subject-icons/SubjectIcon.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "SubjectIcon"
               },
               {
                  "relativePath": "src/components/subject-icons/SubjectIcon.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "accountancy",
                     "administration",
                     "agricultural",
                     "algebra",
                     "all",
                     "arabic",
                     "art",
                     "artmusic",
                     "astronomy",
                     "belarus",
                     "belarus-alt",
                     "biology",
                     "business",
                     "catala",
                     "chemistry",
                     "chinese",
                     "economics",
                     "egzam",
                     "english",
                     "entrepreneurship",
                     "environment",
                     "ethics",
                     "euskara",
                     "first-aid",
                     "french",
                     "galego",
                     "geography",
                     "geology",
                     "geometry",
                     "german",
                     "grammar",
                     "health",
                     "history",
                     "india-lang",
                     "indonesian-lang",
                     "informatics",
                     "italian",
                     "japanese",
                     "kazach",
                     "kazach-alt",
                     "kyrgyz",
                     "korean",
                     "language",
                     "latin",
                     "law",
                     "life-science",
                     "literature",
                     "logic",
                     "mathematics",
                     "music",
                     "nigerian-lang",
                     "otherlanguages",
                     "others",
                     "pedagogics",
                     "philosophy",
                     "physical-education",
                     "physics",
                     "politics",
                     "psychology",
                     "religion",
                     "rpa-lang",
                     "russian",
                     "russian-alt",
                     "science",
                     "security",
                     "skills",
                     "social-science",
                     "sociology",
                     "spanish",
                     "statistics",
                     "technology",
                     "tourism",
                     "traffic",
                     "ukrainian",
                     "ukrainian-alt",
                     "ukrainian-literature",
                     "uzbek",
                     "wos"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "accountancy",
                           "administration",
                           "agricultural",
                           "algebra",
                           "all",
                           "arabic",
                           "art",
                           "artmusic",
                           "astronomy",
                           "belarus",
                           "belarus-alt",
                           "biology",
                           "business",
                           "catala",
                           "chemistry",
                           "chinese",
                           "economics",
                           "egzam",
                           "english",
                           "entrepreneurship",
                           "environment",
                           "ethics",
                           "euskara",
                           "first-aid",
                           "french",
                           "galego",
                           "geography",
                           "geology",
                           "geometry",
                           "german",
                           "grammar",
                           "health",
                           "history",
                           "india-lang",
                           "indonesian-lang",
                           "informatics",
                           "italian",
                           "japanese",
                           "kazach",
                           "kazach-alt",
                           "kyrgyz",
                           "korean",
                           "language",
                           "latin",
                           "law",
                           "life-science",
                           "literature",
                           "logic",
                           "mathematics",
                           "music",
                           "nigerian-lang",
                           "otherlanguages",
                           "others",
                           "pedagogics",
                           "philosophy",
                           "physical-education",
                           "physics",
                           "politics",
                           "psychology",
                           "religion",
                           "rpa-lang",
                           "russian",
                           "russian-alt",
                           "science",
                           "security",
                           "skills",
                           "social-science",
                           "sociology",
                           "spanish",
                           "statistics",
                           "technology",
                           "tourism",
                           "traffic",
                           "ukrainian",
                           "ukrainian-alt",
                           "ukrainian-literature",
                           "uzbek",
                           "wos"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "medium",
                     "normal"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "medium",
                           "normal"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "normal",
                  "source": "parsing"
               },
               "monoColor": {
                  "name": "monoColor",
                  "type": "unknown",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "type"
         ],
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "accountancy",
                  "administration",
                  "agricultural",
                  "algebra",
                  "all",
                  "arabic",
                  "art",
                  "artmusic",
                  "astronomy",
                  "belarus",
                  "belarus-alt",
                  "biology",
                  "business",
                  "catala",
                  "chemistry",
                  "chinese",
                  "economics",
                  "egzam",
                  "english",
                  "entrepreneurship",
                  "environment",
                  "ethics",
                  "euskara",
                  "first-aid",
                  "french",
                  "galego",
                  "geography",
                  "geology",
                  "geometry",
                  "german",
                  "grammar",
                  "health",
                  "history",
                  "india-lang",
                  "indonesian-lang",
                  "informatics",
                  "italian",
                  "japanese",
                  "kazach",
                  "kazach-alt",
                  "kyrgyz",
                  "korean",
                  "language",
                  "latin",
                  "law",
                  "life-science",
                  "literature",
                  "logic",
                  "mathematics",
                  "music",
                  "nigerian-lang",
                  "otherlanguages",
                  "others",
                  "pedagogics",
                  "philosophy",
                  "physical-education",
                  "physics",
                  "politics",
                  "psychology",
                  "religion",
                  "rpa-lang",
                  "russian",
                  "russian-alt",
                  "science",
                  "security",
                  "skills",
                  "social-science",
                  "sociology",
                  "spanish",
                  "statistics",
                  "technology",
                  "tourism",
                  "traffic",
                  "ukrainian",
                  "ukrainian-alt",
                  "ukrainian-literature",
                  "uzbek",
                  "wos"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "accountancy",
                        "administration",
                        "agricultural",
                        "algebra",
                        "all",
                        "arabic",
                        "art",
                        "artmusic",
                        "astronomy",
                        "belarus",
                        "belarus-alt",
                        "biology",
                        "business",
                        "catala",
                        "chemistry",
                        "chinese",
                        "economics",
                        "egzam",
                        "english",
                        "entrepreneurship",
                        "environment",
                        "ethics",
                        "euskara",
                        "first-aid",
                        "french",
                        "galego",
                        "geography",
                        "geology",
                        "geometry",
                        "german",
                        "grammar",
                        "health",
                        "history",
                        "india-lang",
                        "indonesian-lang",
                        "informatics",
                        "italian",
                        "japanese",
                        "kazach",
                        "kazach-alt",
                        "kyrgyz",
                        "korean",
                        "language",
                        "latin",
                        "law",
                        "life-science",
                        "literature",
                        "logic",
                        "mathematics",
                        "music",
                        "nigerian-lang",
                        "otherlanguages",
                        "others",
                        "pedagogics",
                        "philosophy",
                        "physical-education",
                        "physics",
                        "politics",
                        "psychology",
                        "religion",
                        "rpa-lang",
                        "russian",
                        "russian-alt",
                        "science",
                        "security",
                        "skills",
                        "social-science",
                        "sociology",
                        "spanish",
                        "statistics",
                        "technology",
                        "tourism",
                        "traffic",
                        "ukrainian",
                        "ukrainian-alt",
                        "ukrainian-literature",
                        "uzbek",
                        "wos"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "medium",
                  "normal"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "medium",
                        "normal"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "normal",
               "source": "parsing"
            },
            "monoColor": {
               "name": "monoColor",
               "type": "unknown",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "SubjectIcon"
               }
            ]
         ],
         "ignored": false
      },
      "SubjectIconBox": {
         "id": "BrainlyStyleGuide_SubjectIconBox",
         "name": "SubjectIconBox",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "SubjectIconBox"
         },
         "resolved": {
            "relativePath": "src/components/subject-icons/SubjectIconBox.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "SubjectIconBox"
               },
               {
                  "relativePath": "src/components/subject-icons/SubjectIconBox.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "darker": {
                  "name": "darker",
                  "type": "boolean",
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "unknown",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "unknown",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "type"
         ],
         "props": {
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "darker": {
               "name": "darker",
               "type": "boolean",
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "unknown",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "unknown",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "SubjectIconBox"
               }
            ]
         ],
         "ignored": false
      },
      "Headline": {
         "id": "BrainlyStyleGuide_Headline",
         "name": "Headline",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Headline"
         },
         "resolved": {
            "relativePath": "src/components/text/Headline.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Headline"
               },
               {
                  "relativePath": "src/components/text/Headline.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "medium",
                     "large",
                     "xlarge",
                     "xxlarge",
                     "xxxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "medium",
                           "large",
                           "xlarge",
                           "xxlarge",
                           "xxxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "span",
                     "h1",
                     "h2",
                     "h3",
                     "h4",
                     "h5",
                     "h6"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "span",
                           "h1",
                           "h2",
                           "h3",
                           "h4",
                           "h5",
                           "h6"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "default",
                     "white",
                     "gray",
                     "gray-secondary",
                     "gray-secondary-light",
                     "mint-dark",
                     "peach-dark",
                     "lavender-dark",
                     "mustard-dark",
                     "blue-dark"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "white",
                           "gray",
                           "gray-secondary",
                           "gray-secondary-light",
                           "mint-dark",
                           "peach-dark",
                           "lavender-dark",
                           "mustard-dark",
                           "blue-dark"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "transform": {
                  "name": "transform",
                  "type": "string",
                  "enum": [
                     "uppercase",
                     "lowercase",
                     "capitalize"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "uppercase",
                           "lowercase",
                           "capitalize"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "to-left",
                     "to-center",
                     "to-right",
                     "justify"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "to-left",
                           "to-center",
                           "to-right",
                           "justify"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "extraBold": {
                  "name": "extraBold",
                  "type": "boolean",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "medium",
                  "large",
                  "xlarge",
                  "xxlarge",
                  "xxxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge",
                        "xxlarge",
                        "xxxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "span",
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "span",
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "default",
                  "white",
                  "gray",
                  "gray-secondary",
                  "gray-secondary-light",
                  "mint-dark",
                  "peach-dark",
                  "lavender-dark",
                  "mustard-dark",
                  "blue-dark"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "white",
                        "gray",
                        "gray-secondary",
                        "gray-secondary-light",
                        "mint-dark",
                        "peach-dark",
                        "lavender-dark",
                        "mustard-dark",
                        "blue-dark"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "transform": {
               "name": "transform",
               "type": "string",
               "enum": [
                  "uppercase",
                  "lowercase",
                  "capitalize"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "uppercase",
                        "lowercase",
                        "capitalize"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "to-left",
                  "to-center",
                  "to-right",
                  "justify"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "to-left",
                        "to-center",
                        "to-right",
                        "justify"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "extraBold": {
               "name": "extraBold",
               "type": "boolean",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Headline"
               }
            ]
         ],
         "ignored": false
      },
      "Link": {
         "id": "BrainlyStyleGuide_Link",
         "name": "Link",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Link"
         },
         "resolved": {
            "relativePath": "src/components/text/Link.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Link"
               },
               {
                  "relativePath": "src/components/text/Link.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "href": {
                  "name": "href",
                  "type": "string",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "xsmall",
                     "small",
                     "medium",
                     "large",
                     "xlarge",
                     "xxlarge",
                     "xxxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xsmall",
                           "small",
                           "medium",
                           "large",
                           "xlarge",
                           "xxlarge",
                           "xxxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "span",
                     "p",
                     "h1",
                     "h2",
                     "h3",
                     "h4",
                     "h5",
                     "h6",
                     "div",
                     "label",
                     "a"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "span",
                           "p",
                           "h1",
                           "h2",
                           "h3",
                           "h4",
                           "h5",
                           "h6",
                           "div",
                           "label",
                           "a"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "black",
                     "white",
                     "gray",
                     "gray-secondary",
                     "gray-secondary-light",
                     "mint-dark",
                     "blue-dark"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "black",
                           "white",
                           "gray",
                           "gray-secondary",
                           "gray-secondary-light",
                           "mint-dark",
                           "blue-dark"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "weight": {
                  "name": "weight",
                  "type": "string",
                  "enum": [
                     "regular",
                     "bold"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "regular",
                           "bold"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "transform": {
                  "name": "transform",
                  "type": "string",
                  "enum": [
                     "uppercase",
                     "lowercase",
                     "capitalize"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "uppercase",
                           "lowercase",
                           "capitalize"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "to-left",
                     "to-center",
                     "to-right",
                     "justify"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "to-left",
                           "to-center",
                           "to-right",
                           "justify"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "noWrap": {
                  "name": "noWrap",
                  "type": "boolean",
                  "source": "parsing"
               },
               "breakWords": {
                  "name": "breakWords",
                  "type": "boolean",
                  "source": "parsing"
               },
               "underlined": {
                  "name": "underlined",
                  "type": "boolean",
                  "source": "parsing"
               },
               "unstyled": {
                  "name": "unstyled",
                  "type": "boolean",
                  "source": "parsing"
               },
               "emphasised": {
                  "name": "emphasised",
                  "type": "boolean",
                  "source": "parsing"
               },
               "disabled": {
                  "name": "disabled",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_Flex"
                  ]
               }
            },
            "href": {
               "name": "href",
               "type": "string",
               "source": "parsing",
               "used": true
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "xsmall",
                  "small",
                  "medium",
                  "large",
                  "xlarge",
                  "xxlarge",
                  "xxxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge",
                        "xxlarge",
                        "xxxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "span",
                  "p",
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "div",
                  "label",
                  "a"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "span",
                        "p",
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "div",
                        "label",
                        "a"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "black",
                  "white",
                  "gray",
                  "gray-secondary",
                  "gray-secondary-light",
                  "mint-dark",
                  "blue-dark"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "black",
                        "white",
                        "gray",
                        "gray-secondary",
                        "gray-secondary-light",
                        "mint-dark",
                        "blue-dark"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "weight": {
               "name": "weight",
               "type": "string",
               "enum": [
                  "regular",
                  "bold"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "regular",
                        "bold"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "transform": {
               "name": "transform",
               "type": "string",
               "enum": [
                  "uppercase",
                  "lowercase",
                  "capitalize"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "uppercase",
                        "lowercase",
                        "capitalize"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "to-left",
                  "to-center",
                  "to-right",
                  "justify"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "to-left",
                        "to-center",
                        "to-right",
                        "justify"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "noWrap": {
               "name": "noWrap",
               "type": "boolean",
               "source": "parsing"
            },
            "breakWords": {
               "name": "breakWords",
               "type": "boolean",
               "source": "parsing"
            },
            "underlined": {
               "name": "underlined",
               "type": "boolean",
               "source": "parsing"
            },
            "unstyled": {
               "name": "unstyled",
               "type": "boolean",
               "source": "parsing"
            },
            "emphasised": {
               "name": "emphasised",
               "type": "boolean",
               "source": "parsing"
            },
            "disabled": {
               "name": "disabled",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Link"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "Text": {
         "id": "BrainlyStyleGuide_Text",
         "name": "Text",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Text"
         },
         "resolved": {
            "relativePath": "src/components/text/Text.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Text"
               },
               {
                  "relativePath": "src/components/text/Text.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "xxsmall",
                     "xsmall",
                     "small",
                     "medium",
                     "large",
                     "xlarge",
                     "xxlarge",
                     "xxxlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxsmall",
                           "xsmall",
                           "small",
                           "medium",
                           "large",
                           "xlarge",
                           "xxlarge",
                           "xxxlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "span",
                     "p",
                     "h1",
                     "h2",
                     "h3",
                     "h4",
                     "h5",
                     "h6",
                     "div",
                     "label",
                     "a"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "span",
                           "p",
                           "h1",
                           "h2",
                           "h3",
                           "h4",
                           "h5",
                           "h6",
                           "div",
                           "label",
                           "a"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "default",
                     "white",
                     "gray",
                     "gray-secondary",
                     "gray-secondary-light",
                     "mint-dark",
                     "peach-dark",
                     "mustard-dark",
                     "lavender-dark",
                     "blue-dark"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "default",
                           "white",
                           "gray",
                           "gray-secondary",
                           "gray-secondary-light",
                           "mint-dark",
                           "peach-dark",
                           "mustard-dark",
                           "lavender-dark",
                           "blue-dark"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "weight": {
                  "name": "weight",
                  "type": "string",
                  "enum": [
                     "regular",
                     "bold"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "regular",
                           "bold"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "transform": {
                  "name": "transform",
                  "type": "string",
                  "enum": [
                     "uppercase",
                     "lowercase",
                     "capitalize"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "uppercase",
                           "lowercase",
                           "capitalize"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "align": {
                  "name": "align",
                  "type": "string",
                  "enum": [
                     "to-left",
                     "to-center",
                     "to-right",
                     "justify"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "to-left",
                           "to-center",
                           "to-right",
                           "justify"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "noWrap": {
                  "name": "noWrap",
                  "type": "boolean",
                  "source": "parsing"
               },
               "asContainer": {
                  "name": "asContainer",
                  "type": "boolean",
                  "source": "parsing"
               },
               "full": {
                  "name": "full",
                  "type": "boolean",
                  "source": "parsing"
               },
               "breakWords": {
                  "name": "breakWords",
                  "type": "boolean",
                  "source": "parsing"
               },
               "whiteSpace": {
                  "name": "whiteSpace",
                  "type": "string",
                  "enum": [
                     "pre-wrap",
                     "pre-line"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "pre-wrap",
                           "pre-line"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               },
               "href": {
                  "name": "href",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "xxsmall",
                  "xsmall",
                  "small",
                  "medium",
                  "large",
                  "xlarge",
                  "xxlarge",
                  "xxxlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxsmall",
                        "xsmall",
                        "small",
                        "medium",
                        "large",
                        "xlarge",
                        "xxlarge",
                        "xxxlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "span",
                  "p",
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "div",
                  "label",
                  "a"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "span",
                        "p",
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "div",
                        "label",
                        "a"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "default",
                  "white",
                  "gray",
                  "gray-secondary",
                  "gray-secondary-light",
                  "mint-dark",
                  "peach-dark",
                  "mustard-dark",
                  "lavender-dark",
                  "blue-dark"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "default",
                        "white",
                        "gray",
                        "gray-secondary",
                        "gray-secondary-light",
                        "mint-dark",
                        "peach-dark",
                        "mustard-dark",
                        "lavender-dark",
                        "blue-dark"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "weight": {
               "name": "weight",
               "type": "string",
               "enum": [
                  "regular",
                  "bold"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "regular",
                        "bold"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "transform": {
               "name": "transform",
               "type": "string",
               "enum": [
                  "uppercase",
                  "lowercase",
                  "capitalize"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "uppercase",
                        "lowercase",
                        "capitalize"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "align": {
               "name": "align",
               "type": "string",
               "enum": [
                  "to-left",
                  "to-center",
                  "to-right",
                  "justify"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "to-left",
                        "to-center",
                        "to-right",
                        "justify"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "noWrap": {
               "name": "noWrap",
               "type": "boolean",
               "source": "parsing"
            },
            "asContainer": {
               "name": "asContainer",
               "type": "boolean",
               "source": "parsing"
            },
            "full": {
               "name": "full",
               "type": "boolean",
               "source": "parsing"
            },
            "breakWords": {
               "name": "breakWords",
               "type": "boolean",
               "source": "parsing"
            },
            "whiteSpace": {
               "name": "whiteSpace",
               "type": "string",
               "enum": [
                  "pre-wrap",
                  "pre-line"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "pre-wrap",
                        "pre-line"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            },
            "href": {
               "name": "href",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Text"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "TextBit": {
         "id": "BrainlyStyleGuide_TextBit",
         "name": "TextBit",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "TextBit"
         },
         "resolved": {
            "relativePath": "src/components/text/TextBit.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "TextBit"
               },
               {
                  "relativePath": "src/components/text/TextBit.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "type": {
                  "name": "type",
                  "type": "string",
                  "enum": [
                     "h1",
                     "h2",
                     "h3",
                     "h4",
                     "h5",
                     "h6",
                     "div"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "h1",
                           "h2",
                           "h3",
                           "h4",
                           "h5",
                           "h6",
                           "div"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "h1",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "medium",
                     "large",
                     "xlarge"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "medium",
                           "large",
                           "xlarge"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "medium",
                  "source": "parsing"
               },
               "color": {
                  "name": "color",
                  "type": "string",
                  "enum": [
                     "blue-primary",
                     "blue-secondary",
                     "mint-primary",
                     "mint-secondary",
                     "lavender-primary",
                     "lavender-secondary",
                     "peach-primary",
                     "peach-secondary",
                     "mustard-primary",
                     "mustard-secondary",
                     "gray-secondary",
                     "gray-secondary-light",
                     "white",
                     "black"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "blue-primary",
                           "blue-secondary",
                           "mint-primary",
                           "mint-secondary",
                           "lavender-primary",
                           "lavender-secondary",
                           "peach-primary",
                           "peach-secondary",
                           "mustard-primary",
                           "mustard-secondary",
                           "gray-secondary",
                           "gray-secondary-light",
                           "white",
                           "black"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "type": {
               "name": "type",
               "type": "string",
               "enum": [
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "div"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "h1",
                        "h2",
                        "h3",
                        "h4",
                        "h5",
                        "h6",
                        "div"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "h1",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "medium",
                  "large",
                  "xlarge"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "medium",
                        "large",
                        "xlarge"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "medium",
               "source": "parsing"
            },
            "color": {
               "name": "color",
               "type": "string",
               "enum": [
                  "blue-primary",
                  "blue-secondary",
                  "mint-primary",
                  "mint-secondary",
                  "lavender-primary",
                  "lavender-secondary",
                  "peach-primary",
                  "peach-secondary",
                  "mustard-primary",
                  "mustard-secondary",
                  "gray-secondary",
                  "gray-secondary-light",
                  "white",
                  "black"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "blue-primary",
                        "blue-secondary",
                        "mint-primary",
                        "mint-secondary",
                        "lavender-primary",
                        "lavender-secondary",
                        "peach-primary",
                        "peach-secondary",
                        "mustard-primary",
                        "mustard-secondary",
                        "gray-secondary",
                        "gray-secondary-light",
                        "white",
                        "black"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "TextBit"
               }
            ]
         ],
         "ignored": false
      },
      "TopLayer": {
         "id": "BrainlyStyleGuide_TopLayer",
         "name": "TopLayer",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "TopLayer"
         },
         "resolved": {
            "relativePath": "src/components/toplayer/TopLayer.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "TopLayer"
               },
               {
                  "relativePath": "src/components/toplayer/TopLayer.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "onClose": {
                  "name": "onClose",
                  "type": "Event",
                  "source": "parsing"
               },
               "onCloseButtonKeyDown": {
                  "name": "onCloseButtonKeyDown",
                  "type": "Event",
                  "source": "parsing"
               },
               "lead": {
                  "name": "lead",
                  "type": "boolean",
                  "source": "parsing"
               },
               "fill": {
                  "name": "fill",
                  "type": "boolean",
                  "source": "parsing"
               },
               "modal": {
                  "name": "modal",
                  "type": "boolean",
                  "source": "parsing"
               },
               "withBugbox": {
                  "name": "withBugbox",
                  "type": "boolean",
                  "source": "parsing"
               },
               "smallSpaced": {
                  "name": "smallSpaced",
                  "type": "boolean",
                  "source": "parsing"
               },
               "splashScreen": {
                  "name": "splashScreen",
                  "type": "boolean",
                  "source": "parsing"
               },
               "limitedWidth": {
                  "name": "limitedWidth",
                  "type": "boolean",
                  "source": "parsing"
               },
               "row": {
                  "name": "row",
                  "type": "boolean",
                  "source": "parsing"
               },
               "size": {
                  "name": "size",
                  "type": "string",
                  "enum": [
                     "small",
                     "medium",
                     "large"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "medium",
                           "large"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "source": "parsing"
               },
               "transparent": {
                  "name": "transparent",
                  "type": "boolean",
                  "source": "parsing"
               },
               "noPadding": {
                  "name": "noPadding",
                  "type": "boolean",
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing"
            },
            "onClose": {
               "name": "onClose",
               "type": "Event",
               "source": "parsing"
            },
            "onCloseButtonKeyDown": {
               "name": "onCloseButtonKeyDown",
               "type": "Event",
               "source": "parsing"
            },
            "lead": {
               "name": "lead",
               "type": "boolean",
               "source": "parsing"
            },
            "fill": {
               "name": "fill",
               "type": "boolean",
               "source": "parsing"
            },
            "modal": {
               "name": "modal",
               "type": "boolean",
               "source": "parsing"
            },
            "withBugbox": {
               "name": "withBugbox",
               "type": "boolean",
               "source": "parsing"
            },
            "smallSpaced": {
               "name": "smallSpaced",
               "type": "boolean",
               "source": "parsing"
            },
            "splashScreen": {
               "name": "splashScreen",
               "type": "boolean",
               "source": "parsing"
            },
            "limitedWidth": {
               "name": "limitedWidth",
               "type": "boolean",
               "source": "parsing"
            },
            "row": {
               "name": "row",
               "type": "boolean",
               "source": "parsing"
            },
            "size": {
               "name": "size",
               "type": "string",
               "enum": [
                  "small",
                  "medium",
                  "large"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "medium",
                        "large"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "source": "parsing"
            },
            "transparent": {
               "name": "transparent",
               "type": "boolean",
               "source": "parsing"
            },
            "noPadding": {
               "name": "noPadding",
               "type": "boolean",
               "source": "parsing"
            },
            "className": {
               "name": "className",
               "type": "string",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "TopLayer"
               }
            ]
         ],
         "ignored": false
      },
      "hex": {
         "ignored": true
      },
      "Accordion": {
         "id": "BrainlyStyleGuide_Accordion",
         "name": "Accordion",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "Accordion"
         },
         "resolved": {
            "relativePath": "src/components/accordion/Accordion.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "Accordion"
               },
               {
                  "relativePath": "src/components/accordion/Accordion.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "allowMultiple": {
                  "name": "allowMultiple",
                  "type": "boolean",
                  "default": false,
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "default": "",
                  "source": "parsing"
               },
               "spacing": {
                  "name": "spacing",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl",
                     "xxl",
                     "xxxl",
                     "xxxxl",
                     "none"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl",
                           "xxl",
                           "xxxl",
                           "xxxxl",
                           "none"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "s",
                  "source": "parsing"
               },
               "reduceMotion": {
                  "name": "reduceMotion",
                  "type": "boolean",
                  "default": false,
                  "source": "parsing"
               },
               "expanded": {
                  "name": "expanded",
                  "type": "string",
                  "multipleTypes": [
                     {
                        "type": "string"
                     },
                     {
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  ],
                  "source": "parsing"
               },
               "defaultExpanded": {
                  "name": "defaultExpanded",
                  "type": "string",
                  "multipleTypes": [
                     {
                        "type": "string"
                     },
                     {
                        "type": "array",
                        "items": {
                           "type": "string"
                        }
                     }
                  ],
                  "source": "parsing"
               },
               "onChange": {
                  "name": "onChange",
                  "type": "Event",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "children"
         ],
         "props": {
            "allowMultiple": {
               "name": "allowMultiple",
               "type": "boolean",
               "default": false,
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_AccordionItem"
                  ]
               }
            },
            "className": {
               "name": "className",
               "type": "string",
               "default": "",
               "source": "parsing"
            },
            "spacing": {
               "name": "spacing",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl",
                  "xxl",
                  "xxxl",
                  "xxxxl",
                  "none"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl",
                        "xxl",
                        "xxxl",
                        "xxxxl",
                        "none"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "s",
               "source": "parsing"
            },
            "reduceMotion": {
               "name": "reduceMotion",
               "type": "boolean",
               "default": false,
               "source": "parsing"
            },
            "expanded": {
               "name": "expanded",
               "type": "string",
               "multipleTypes": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "array",
                     "items": {
                        "type": "string"
                     }
                  }
               ],
               "source": "parsing",
               "used": true
            },
            "defaultExpanded": {
               "name": "defaultExpanded",
               "type": "string",
               "multipleTypes": [
                  {
                     "type": "string"
                  },
                  {
                     "type": "array",
                     "items": {
                        "type": "string"
                     }
                  }
               ],
               "source": "parsing"
            },
            "onChange": {
               "name": "onChange",
               "type": "Event",
               "source": "parsing"
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "Accordion"
               }
            ]
         ],
         "used": true,
         "ignored": false
      },
      "AccordionItem": {
         "id": "BrainlyStyleGuide_AccordionItem",
         "name": "AccordionItem",
         "code": {
            "packageName": "brainly-style-guide",
            "exportName": "AccordionItem"
         },
         "resolved": {
            "relativePath": "src/components/accordion/AccordionItem.jsx",
            "exportName": "default",
            "statementType": "ExportDefaultDeclaration",
            "steps": [
               {
                  "relativePath": "src/interplay.js",
                  "exportName": "AccordionItem"
               },
               {
                  "relativePath": "src/components/accordion/AccordionItem.jsx",
                  "exportName": "default"
               }
            ]
         },
         "parsed": {
            "props": {
               "title": {
                  "name": "title",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "titleSize": {
                  "name": "titleSize",
                  "type": "string",
                  "enum": [
                     "small",
                     "large"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "small",
                           "large"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "large",
                  "source": "parsing"
               },
               "children": {
                  "name": "children",
                  "type": "array",
                  "items": {
                     "type": "Node"
                  },
                  "source": "parsing"
               },
               "className": {
                  "name": "className",
                  "type": "string",
                  "default": "",
                  "source": "parsing"
               },
               "padding": {
                  "name": "padding",
                  "type": "string",
                  "enum": [
                     "xxs",
                     "xs",
                     "s",
                     "m",
                     "l",
                     "xl"
                  ],
                  "multipleTypes": [
                     {
                        "type": "string",
                        "enum": [
                           "xxs",
                           "xs",
                           "s",
                           "m",
                           "l",
                           "xl"
                        ]
                     },
                     {
                        "type": "unknown"
                     }
                  ],
                  "default": "m",
                  "source": "parsing"
               },
               "tabIndex": {
                  "name": "tabIndex",
                  "type": "number",
                  "default": 0,
                  "source": "parsing"
               },
               "id": {
                  "name": "id",
                  "type": "string",
                  "source": "parsing"
               }
            }
         },
         "required": [
            "title"
         ],
         "props": {
            "title": {
               "name": "title",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true
            },
            "titleSize": {
               "name": "titleSize",
               "type": "string",
               "enum": [
                  "small",
                  "large"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "small",
                        "large"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "large",
               "source": "parsing"
            },
            "children": {
               "name": "children",
               "type": "array",
               "items": {
                  "type": "Node"
               },
               "source": "parsing",
               "used": true,
               "ui": {
                  "suggested": [
                     "BrainlyStyleGuide_Flex"
                  ]
               }
            },
            "className": {
               "name": "className",
               "type": "string",
               "default": "",
               "source": "parsing"
            },
            "padding": {
               "name": "padding",
               "type": "string",
               "enum": [
                  "xxs",
                  "xs",
                  "s",
                  "m",
                  "l",
                  "xl"
               ],
               "multipleTypes": [
                  {
                     "type": "string",
                     "enum": [
                        "xxs",
                        "xs",
                        "s",
                        "m",
                        "l",
                        "xl"
                     ]
                  },
                  {
                     "type": "unknown"
                  }
               ],
               "default": "m",
               "source": "parsing"
            },
            "tabIndex": {
               "name": "tabIndex",
               "type": "number",
               "default": 0,
               "source": "parsing"
            },
            "id": {
               "name": "id",
               "type": "string",
               "source": "parsing",
               "used": true
            },
            "key": {
               "name": "key",
               "type": "string",
               "used": true
            }
         },
         "exportedAs": [
            [
               {
                  "format": "ES2015",
                  "type": "default",
                  "name": "AccordionItem"
               }
            ]
         ],
         "used": true,
         "overrides": {
            "props": {
               "key": {
                  "source": "example",
                  "relativePath": "src/components/accordion/Accordion.stories.jsx",
                  "prev": null,
                  "new": {
                     "name": "key",
                     "type": "string",
                     "used": true
                  }
               }
            }
         },
         "ignored": false
      }
   }
}